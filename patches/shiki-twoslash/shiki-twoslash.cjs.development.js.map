{"version":3,"file":"shiki-twoslash.cjs.development.js","sources":["../src/annotations.ts","../src/utils.ts","../src/renderers/plain.ts","../src/renderers/twoslash.ts","../src/renderers/shiki.ts","../src/tsconfig-oneliners.generated.ts","../src/renderers/tsconfig.ts","../src/index.ts"],"sourcesContent":["import { TwoslashError, TwoSlashReturn } from \"@typescript/twoslash\"\n\nexport const htmlForTags = (tags: TwoSlashReturn[\"tags\"]) => {\n  let html = \"\"\n  tags.forEach(t => {\n    if (t.name === \"annotate\" && t.annotation) {\n      const meta = t.annotation.split(\" - \")\n      const text = meta.pop()\n      const info = (meta[0] || \"\").trim()\n      const flipped = info.includes(\"right\")\n      let settings = {\n        flipped,\n        arrowRot: flipped ? \"90deg 20px 20px\" : \"90deg 20px 20px\",\n        textDegree: \"0deg\",\n        top: `${t.line}em`\n      }\n      \n      \n      if (info.includes(\"{\")) {\n        const theInfo =  \"{\" + info.split(\"{\")[1]\n        try {\n          const specificSettings = JSON.parse(theInfo)\n          settings = {...settings, ...specificSettings }\n        } catch (error) {\n          throw new TwoslashError(\"Could not parse annotation\", `The annotation ${JSON.stringify(t)} could convert '${theInfo}' into JSON`, `Look at ${(error as any).message}.`)\n        }\n      }\n      \n      const arrowSVG = arrow(settings)\n\n      html += `\n<div class='twoslash-annotation ${flipped ? \"right\" : \"left\"}' style=\"top: ${settings.top}\">\n  ${arrowSVG}\n  <p class='twoslash-annotation-text' style=\"transform: rotate(${settings.textDegree})\">${text}</p>\n</div>`\n    }\n  })\n\n  return html\n}\n\nconst arrow = (style: { flipped: boolean; arrowRot: string, textDegree: string, top: string }) => {\n  const leftInner = `M27 39C26.5 32.7511 21.9 17.5173 7.5 6.57333M16.5 4.04L0.999999 0.999998C3.16667 4.88444 7.5 13.16 7.5 15.1867`\n  const rightInner = `M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867`\n  const inner = style.flipped ? leftInner : rightInner\n  const rot = style.arrowRot.split(\" \")\n  return `<svg style='transform: translateX(${rot[1]}) translateY(${rot[2]}) rotate(${rot[0]});' width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"${inner}\" stroke=\"black\" />\n</svg>`\n}\n","import type { parse } from \"fenceparser\"\n\nexport type Meta = NonNullable<ReturnType<typeof parse>>\n\ntype Range = {\n  begin: number\n  end: number\n  text?: string\n  count?: number\n  tooltip?: string[]\n  classes?: string\n  lsp?: string\n}\n\n/**\n * We're given the text which lives inside the token, and this function will\n * annotate it with twoslash metadata\n */\nexport function createHighlightedString(ranges: Range[], text: string, targetedWord: string = \"\") {\n  // Why the weird chars? We need to make sure that generic syntax isn't\n  // interpreted as html tags - to do that we need to switch out < to &lt; - *but*\n  // making that transition changes the indexes because it's gone from 1 char to 4 chars\n  //\n  // So, use an obscure character to indicate a real < for HTML, then switch it after\n  const tag = (x: string) => `⇍${x}⇏`\n  const makeTagFromRange = (r: Range, close?: true) => {\n    switch (r.classes) {\n      case \"lsp\":\n        // The LSP response lives inside a dom attribute, which _can_ have < inside it, so switch them ahead of time.\n        const lsp = htmlAttrReplacer(r.lsp || \"\")\n        const underLineTargetedWord = r.lsp === targetedWord ? \"style=⇯border-bottom: solid 2px lightgrey;⇯\" : \"\"\n        return close ? tag(\"/data-lsp\") : tag(`data-lsp lsp=¿${lsp}¿ ${underLineTargetedWord}`)\n      case \"query\":\n        return tag(`${close ? \"/\" : \"\"}data-highlight`)\n      // handle both unknown and err variant as error-tag\n      // case \"err\": is not required, just to be useful for others\n      case \"err\":\n      default:\n        return tag(`${close ? \"/\" : \"\"}data-err`)\n    }\n  }\n\n  ranges.sort((a, b) => {\n    // Order of precedence\n    // if two same offset meet, the lsp will be put as innermost than err and query\n    const precedenceOf = (x?: string) => [\"err\", \"query\", \"lsp\"].indexOf(x ?? \"\")\n\n    let cmp = 0\n    // Can be desugared into,\n    // 1. compare based on smaller begin, !(cmp) means if it's 0 then\n    // 2. compare based on bigger end, ^ same thing again then\n    // 3. compare based on higher precedence\n    // && is so that if a step made cmp to something other than 0, it stops\n    /***1*/ !(cmp = a.begin - b.begin) &&\n      /*2*/ !(cmp = b.end - a.end) &&\n      /*3*/ !(cmp = precedenceOf(a.classes) - precedenceOf(b.classes))\n    return cmp\n  }) // `Array.sort` works in place\n\n  // Marks how much of the text has been put into the output/html\n  let cursor = 0\n  // should be maximum of O(n) where n is length of ranges\n  const nest = (data: typeof ranges) => {\n    let stack = \"\"\n    const top = data.shift()! // I have made sure data can't be empty\n\n    // parse from cursor to top.begin to make sure\n    // strings on the way are parsed\n    stack += text.substring(cursor, top.begin)\n    cursor = top.begin\n\n    // open tag\n    stack += makeTagFromRange(top)\n\n    // if the data still have an element that's in the top's range\n    if (data.some(x => x.begin < top.end)) {\n      stack += nest(data)\n    } else {\n      // othewise slice the text and set cursor\n      stack += text.substring(top.begin, top.end)\n      cursor = top.end\n    }\n\n    // close tag\n    stack += makeTagFromRange(top, true)\n\n    // if the tag is complete but still have some data left in the range\n    if (data.length !== 0) {\n      stack += nest(data)\n    }\n\n    return stack\n  }\n\n  // cloned because I don't feel comfortable modifying this as a side-effect from recursion\n  const data = JSON.parse(JSON.stringify(ranges))\n  const html = nest(data) + text.substring(cursor) // nested + leftover texts\n\n  return htmlAttrUnReplacer(replaceTripleArrow(stripHTML(html)))\n}\n\n// HTML attributes have different rules,\nconst htmlAttrReplacer = (str: string) => str.replace(/\"/g, \"⃟\")\nconst htmlAttrUnReplacer = (str: string) => str.replace(/⃟/g, '\"')\n\n// Inline strings which are shown at HTML level\nexport const subTripleArrow = (str: string) => str.replace(/</g, \"⇍\").replace(/>/g, \"⇏\").replace(/'/g, \"⇯\")\nexport const replaceTripleArrow = (str: string) =>\n  str.replace(/⇍/g, \"<\").replace(/⇏/g, \">\").replace(/⇯/g, \"'\").replace(/¿/g, \"'\")\nexport const replaceTripleArrowEncoded = (str: string) =>\n  str.replace(/⇍/g, \"&lt;\").replace(/⇏/g, \"&gt;\").replace(/⇯/g, \"&apos;\")\n\nexport function stripHTML(text: string) {\n  var table: any = {\n    \"<\": \"lt\",\n    '\"': \"quot\",\n    \"'\": \"apos\",\n    \"&\": \"amp\",\n    \"\\r\": \"#13\",\n    \"\\n\": \"#10\",\n  }\n\n  return text.toString().replace(/[<\"'\\r\\n&]/g, function (chr) {\n    return \"&\" + table[chr] + \";\"\n  })\n}\n\nexport function escapeHtml(html: string) {\n  return html.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\n/** Does anything in the object imply that we should highlight any lines? */\nexport const shouldBeHighlightable = (highlight: any) => {\n  return !!Object.keys(highlight || {}).find(key => {\n    if (key.includes(\"-\")) return true\n    if (!isNaN(parseInt(key))) return true\n    return false\n  })\n}\n\n/** Returns a func for figuring out if this line should be highlighted */\nexport const shouldHighlightLine = (highlight: any) => {\n  const lines: number[] = []\n  Object.keys(highlight || {}).find(key => {\n    if (!isNaN(parseInt(key))) lines.push(parseInt(key))\n    if (key.includes(\"-\")) {\n      const [first, last] = key.split(\"-\")\n      const lastIndex = parseInt(last) + 1\n      for (let i = parseInt(first); i < lastIndex; i++) {\n        lines.push(i)\n      }\n    }\n  })\n\n  return (line: number) => lines.includes(line)\n}\n","import { escapeHtml, Meta } from \"../utils\"\n\n// C&P'd from shiki\nexport interface HtmlRendererOptions {\n  langId?: string\n  fg?: string\n  bg?: string\n  themeName?: string\n}\n\n/** A func for setting a consistent <pre> */\nexport const preOpenerFromRenderingOptsWithExtras = (opts: HtmlRendererOptions, meta: Meta, classes?: string[]) => {\n  const bg = opts.bg || \"#fff\"\n  const fg = opts.fg || \"black\"\n  const theme = opts.themeName || \"\"\n\n  // shiki + `class` from fence + with-title if title exists + classes\n  const classList = [\"shiki\", theme, meta.class, meta.title ? \"with-title\" : \"\", ...(classes || [])]\n    .filter(Boolean)\n    .join(\" \")\n    .trim()\n\n  const attributes = Object.entries(meta)\n    .filter(entry => {\n      // exclude types other than string, number, boolean\n      // exclude keys class, twoslash\n      // exclude falsy booleans\n      return (\n        [\"string\", \"number\", \"boolean\"].includes(typeof entry[1]) &&\n        ![\"class\", \"twoslash\"].includes(entry[0]) &&\n        entry[1] !== false\n      )\n    })\n    .map(([key, value]) => `${key}=\"${value}\"`)\n    .join(\" \")\n    .trim()\n\n  // prettier-ignore\n  return `<pre class=\"${classList}\" style=\"background-color: ${bg}; color: ${fg}\"${attributes ? ` ${attributes}`: ''}>`\n}\n\n/** You don't have a language which shiki twoslash can handle, make a DOM compatible version  */\nexport function plainTextRenderer(code: string, options: HtmlRendererOptions, meta: Meta) {\n  let html = \"\"\n\n  html += preOpenerFromRenderingOptsWithExtras(options, meta, [])\n  if (meta.title) {\n    html += `<div class='code-title'>${meta.title}</div>`\n  }\n\n  if (options.langId) {\n    html += `<div class=\"language-id\">${options.langId}</div>`\n  }\n\n  html += `<div class='code-container'><code>`\n  html += escapeHtml(code)\n\n  html = html.replace(/\\n*$/, \"\") // Get rid of final new lines\n  html += `</code></div></pre>`\n  return html\n}\n","type Lines = import(\"shiki\").IThemedToken[][]\ntype TwoSlash = import(\"@typescript/twoslash\").TwoSlashReturn\n\nimport { TwoslashShikiOptions } from \"..\"\nimport { htmlForTags } from \"../annotations\"\nimport {\n  shouldBeHighlightable,\n  shouldHighlightLine,\n  createHighlightedString,\n  subTripleArrow,\n  replaceTripleArrowEncoded,\n  escapeHtml,\n  Meta,\n} from \"../utils\"\nimport { HtmlRendererOptions, preOpenerFromRenderingOptsWithExtras } from \"./plain\"\n\n// OK, so - this is just straight up complex code.\n\n// What we're trying to do is merge two sets of information into a single tree for HTML\n\n// 1: Syntax highlight info from shiki\n// 2: Twoslash metadata like errors, identifiers etc\n\n// Because shiki gives use a set of lines to work from, then the first thing which happens\n// is converting twoslash data into the same format.\n\n// Things which make it hard:\n//\n// - Twoslash results can be cut, so sometimes there is edge cases between twoslash results\n// - Twoslash results can be multi-file\n// - the DOM requires a flattened graph of html elements (e.g. spans can' be interspersed)\n//\n\nexport function twoslashRenderer(lines: Lines, options: HtmlRendererOptions & TwoslashShikiOptions, twoslash: TwoSlash, meta: Meta) {\n  let html = \"\"\n\n  const hasHighlight = meta.highlight && shouldBeHighlightable(meta.highlight)\n  const hl = shouldHighlightLine(meta.highlight)\n\n  if (twoslash.tags && twoslash.tags.length) html += \"<div class='tag-container'>\"\n  \n  html += preOpenerFromRenderingOptsWithExtras(options, meta, [\"twoslash\", \"lsp\"])\n  if (meta.title) {\n    html += `<div class='code-title'>${meta.title}</div>`\n  }\n\n  if (options.langId) {\n    html += `<div class=\"language-id\">${options.langId}</div>`\n  }\n\n  html += `<div class='code-container'><code>`\n\n  const errorsGroupedByLine = groupBy(twoslash.errors, e => e.line) || new Map()\n  const staticQuickInfosGroupedByLine = groupBy(twoslash.staticQuickInfos, q => q.line) || new Map()\n  // A query is always about the line above it!\n  const queriesGroupedByLine = groupBy(twoslash.queries, q => q.line - 1) || new Map()\n  const tagsGroupedByLine = groupBy(twoslash.tags, q => q.line - 1) || new Map()\n\n  /**\n   * This is the index of the original twoslash code reference, it is not\n   * related to the HTML output\n   */\n  let filePos = 0\n\n  lines.forEach((l, i) => {\n    const errors = errorsGroupedByLine.get(i) || []\n    const lspValues = staticQuickInfosGroupedByLine.get(i) || []\n    const queries = queriesGroupedByLine.get(i) || []\n    const tags = tagsGroupedByLine.get(i) || []\n\n    const hiClass = hasHighlight ? (hl(i + 1) ? \" highlight\" : \" dim\") : \"\"\n    const prefix = `<div class='line${hiClass}'>`\n\n    if (l.length === 0 && i === 0) {\n      // Skip the first newline if it's blank\n      filePos += 1\n    } else if (l.length === 0) {\n      const emptyLine = `${prefix}&nbsp;</div>` \n      html += emptyLine\n      filePos += 1\n    } else {\n      html += prefix\n\n      // Keep track of the position of the current token in a line so we can match it up to the\n      // errors and lang serv identifiers\n      let tokenPos = 0\n\n      l.forEach(token => {\n        let targetedQueryWord: typeof twoslash.staticQuickInfos[number] | undefined\n\n        let tokenContent = \"\"\n        // Underlining particular words\n        const findTokenFunc = (start: number) => (e: any) =>\n          start <= e.character && start + token.content.length >= e.character + e.length\n\n        const findTokenDebug = (start: number) => (e: any) => {\n          const result = start <= e.character && start + token.content.length >= e.character + e.length\n          // prettier-ignore\n          console.log(result, start, '<=', e.character, '&&', start + token.content.length, '>=', e.character + e.length)\n          if (result) {\n            console.log(\"Found:\", e)\n            console.log(\"Inside:\", token)\n          }\n          return result\n        }\n\n        const errorsInToken = errors.filter(findTokenFunc(tokenPos))\n        const lspResponsesInToken = lspValues.filter(findTokenFunc(tokenPos))\n        const queriesInToken = queries.filter(findTokenFunc(tokenPos))\n\n        // Does this line have a word targeted by a query?\n        targetedQueryWord = targetedQueryWord || lspResponsesInToken.find(response => response.text === (queries.length && queries[0].text))!\n\n        const allTokens = [...errorsInToken, ...lspResponsesInToken, ...queriesInToken]\n        const allTokensByStart = allTokens.sort((l, r) => {\n          return (l.start || 0) - (r.start || 0)\n        })\n\n        if (allTokensByStart.length) {\n          const ranges = allTokensByStart.map(token => {\n            const range: any = {\n              begin: token.start! - filePos,\n              end: token.start! + token.length! - filePos,\n            }\n\n            // prettier-ignore\n            if (range.begin < 0 || range.end < 0) {\n              // prettier-ignore\n              // throw new Error(`The begin range of a token is at a minus location, filePos:${filePos} current token: ${JSON.stringify(token, null, '  ')}\\n result: ${JSON.stringify(range, null, '  ')}`)\n            }\n\n            if (\"renderedMessage\" in token) range.classes = \"err\"\n            if (\"kind\" in token) range.classes = token.kind\n            if (\"targetString\" in token) {\n              range.classes = \"lsp\"\n              const lspText = options.includeJSDocInHover && token.docs ? `${token.docs}\\n\\n${token.text}` : token.text\n              range[\"lsp\"] = lspText\n            }\n            return range\n          })\n\n          tokenContent += createHighlightedString(ranges, token.content, targetedQueryWord?.text)\n        } else {\n          tokenContent += subTripleArrow(token.content)\n        }\n\n        html += `<span style=\"color: ${token.color}\">${tokenContent}</span>`\n        tokenPos += token.content.length\n        filePos += token.content.length\n      })\n\n      html += `</div>`\n      // This is the \\n which the </div> represents\n      filePos += 1\n    }\n\n    // Adding error messages to the line after\n    if (errors.length) {\n      const messages = errors.map(e => escapeHtml(e.renderedMessage)).join(\"</br>\")\n      const codes = errors.map(e => e.code).join(\"<br/>\")\n      html += `<span class=\"error\"><span>${messages}</span><span class=\"code\">${codes}</span></span>`\n      html += `<span class=\"error-behind\">${messages}</span>`\n    }\n\n    // Add queries to the next line\n    if (queries.length) {\n      queries.forEach(query => {\n        // This is used to wrap popovers and completions to improve styling options for users.\n        html += `<div class='meta-line'>`\n\n        switch (query.kind) {\n          case \"query\": {\n            const queryTextWithPrefix = escapeHtml(query.text!)\n            const lspValues = staticQuickInfosGroupedByLine.get(i) || []\n            const targetedWord = lspValues.find(response => response.text === (queries.length && queries[0].text))!\n            const halfWayAcrossTheTargetedWord = ((targetedWord && targetedWord.character + targetedWord?.length / 2) - 1) || 0\n            html +=\n              `<span class='popover-prefix'>` +\n              \" \".repeat(halfWayAcrossTheTargetedWord) +\n              \"</span>\" +\n              `<span class='popover'><div class='arrow'></div>${queryTextWithPrefix}</span>`\n            break\n          }\n\n          case \"completions\": {\n            if (!query.completions) {\n              html += `<span class='query'>${\"//\" + \"\".padStart(query.offset - 2) + \"^ - No completions found\"}</span>`\n            } else {\n              const prefixed = query.completions.filter(c => c.name.startsWith(query.completionsPrefix || \"____\"))\n\n              const lis = prefixed\n                .sort((l, r) => l.name.localeCompare(r.name))\n                .map(c => {\n                  const after = c.name.substr(query.completionsPrefix?.length || 0)\n                  const name = `<span><span class='result-found'>${query.completionsPrefix || \"\"}</span>${after}</span>`\n                  const isDeprecated = c.kindModifiers?.split(\",\").includes(\"deprecated\")\n                  const liClass = isDeprecated ? \"deprecated\" : \"\"\n                  return `<li class='${liClass}'>${name}</li>`\n                })\n                .join(\"\")\n              html += `${\"&nbsp;\".repeat(query.offset)}<span class='inline-completions'><ul class='dropdown'>${lis}</ul></span>`\n            }\n          }\n        }\n        html += \"</div>\"\n      })\n    }\n\n    // Any tags (currently that's warn/error/log)\n    if (tags.length) {\n      tags.forEach(tag => {\n          if(![\"error\", \"warn\", \"log\"].includes(tag.name)) return\n\n          // This is used to wrap popovers and completions to improve styling options for users.\n          html += `<div class='meta-line logger ${tag.name}-log'>`\n          switch(tag.name) {\n            case \"error\": html += `${errorSVG}<span class='message'>${tag.annotation || \"N/A\"}</span>`; break;\n            case \"warn\": html += `${warningSVG}<span class='message'>${tag.annotation || \"N/A\"}</span>`; break;\n            case \"log\": html += `${logSVG}<span class='message'>${tag.annotation || \"N/A\"}</span>`; break;\n          }\n          html += \"</div>\"\n      })\n    }\n  })\n  html = replaceTripleArrowEncoded(html.replace(/\\n*$/, \"\")) // Get rid of final new lines\n\n  if (options.addTryButton) {\n    const playgroundLink = `<a class='playground-link' href='${twoslash.playgroundURL}'>Try</a>`\n    html += `</code>${playgroundLink}`\n  } else {\n    html += `</code>`\n  }\n\n  html += `</div></pre>`\n\n  // Attach annotations which live above of the code\n  if (twoslash.tags && twoslash.tags.length) {\n    html += htmlForTags(twoslash.tags)\n    html += \"</div>\"\n  }\n\n  return html\n}\n\n/** Returns a map where all the keys are the value in keyGetter  */\nfunction groupBy<T>(list: T[], keyGetter: (obj: any) => number) {\n  const map = new Map<number, T[]>()\n  list.forEach(item => {\n    const key = keyGetter(item)\n    const collection = map.get(key)\n    if (!collection) {\n      map.set(key, [item])\n    } else {\n      collection.push(item)\n    }\n  })\n  return map\n}\n\n\nconst errorSVG = `<svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.63018 1.29289L1.29289 4.63018C1.10536 4.81772 1 5.07207 1 5.33729V13.6627C1 13.9279 1.10536 14.1823 1.29289 14.3698L4.63018 17.7071C4.81772 17.8946 5.07207 18 5.33729 18H13.6627C13.9279 18 14.1823 17.8946 14.3698 17.7071L17.7071 14.3698C17.8946 14.1823 18 13.9279 18 13.6627V5.33729C18 5.07207 17.8946 4.81772 17.7071 4.63018L14.3698 1.29289C14.1823 1.10536 13.9279 1 13.6627 1H5.33729C5.07207 1 4.81772 1.10536 4.63018 1.29289Z\" fill=\"#E72622\" stroke=\"#E72622\"/><rect x=\"8\" y=\"4\" width=\"3\" height=\"7\" fill=\"white\"/><rect x=\"8\" y=\"13\" width=\"3\" height=\"3\" fill=\"white\"/></svg>`\nconst warningSVG = `<svg width=\"21\" height=\"18\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.63401 0.5C10.0189 -0.166667 10.9812 -0.166667 11.3661 0.5L20.4593 16.25C20.8442 16.9167 20.3631 17.75 19.5933 17.75H1.40676C0.636965 17.75 0.15584 16.9167 0.54074 16.25L9.63401 0.5Z\" fill=\"#E5A604\"/><rect x=\"9\" y=\"4\" width=\"3\" height=\"7\" fill=\"white\"/><rect x=\"9\" y=\"13\" width=\"3\" height=\"3\" fill=\"white\"/></svg>`\nconst logSVG = `<svg width=\"12\" height=\"15\" viewBox=\"0 0 12 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.76822 0.359816C5.41466 -0.0644613 4.78409 -0.121785 4.35982 0.231779C3.93554 0.585343 3.87821 1.21591 4.23178 1.64018L5.76822 0.359816ZM10 7L10.7926 7.60971L11.2809 6.97499L10.7682 6.35982L10 7ZM4.20738 12.8903C3.87064 13.328 3.95254 13.9559 4.39029 14.2926C4.82804 14.6294 5.45589 14.5475 5.79262 14.1097L4.20738 12.8903ZM4.23178 1.64018L9.23178 7.64018L10.7682 6.35982L5.76822 0.359816L4.23178 1.64018ZM9.20738 6.39029L4.20738 12.8903L5.79262 14.1097L10.7926 7.60971L9.20738 6.39029Z\" fill=\"#BDBDBD\"/><line y1=\"3.5\" x2=\"4\" y2=\"3.5\" stroke=\"#BDBDBD\"/><path d=\"M0 7H4\" stroke=\"#BDBDBD\"/><line y1=\"10.5\" x2=\"4\" y2=\"10.5\" stroke=\"#BDBDBD\"/></svg>`","import { shouldBeHighlightable, shouldHighlightLine, escapeHtml, Meta } from \"../utils\"\nimport { HtmlRendererOptions, preOpenerFromRenderingOptsWithExtras } from \"./plain\"\nimport shiki from \"shiki\"\n\ntype Lines = shiki.IThemedToken[][]\n\nexport function defaultShikiRenderer(lines: Lines, options: HtmlRendererOptions, meta: Meta) {\n  let html = \"\"\n\n  const hasHighlight = meta.highlight && shouldBeHighlightable(meta.highlight)\n  const hl = shouldHighlightLine(meta.highlight)\n\n  html += preOpenerFromRenderingOptsWithExtras(options, meta, [])\n  if (meta.title) {\n    html += `<div class='code-title'>${meta.title}</div>`\n  }\n\n  if (options.langId) {\n    html += `<div class=\"language-id\">${options.langId}</div>`\n  }\n\n  html += `<div class='code-container'><code>`\n\n  lines.forEach((l, i) => {\n    if (l.length === 0) {\n      html += `<div class='line'></div>`\n    } else {\n      const hiClass = hasHighlight ? (hl(i) ? \" highlight\" : \" dim\") : \"\"\n      const prefix = `<div class='line${hiClass}'>`\n      html += prefix\n\n      l.forEach(token => {\n        const cssDeclarations = [`color: ${token.color}`];\n        if (token.fontStyle) {\n          if (token.fontStyle & shiki.FontStyle.Italic) {\n            cssDeclarations.push('font-style: italic');\n          }\n          if (token.fontStyle & shiki.FontStyle.Bold) {\n            cssDeclarations.push('font-weight: bold');\n          }\n          if (token.fontStyle & shiki.FontStyle.Underline) {\n            cssDeclarations.push('text-decoration: underline');\n          }\n        }\n        html += `<span style=\"color: ${cssDeclarations.join('; ')}\">${escapeHtml(token.content)}</span>`\n      })\n      html += `</div>`\n    }\n  })\n\n  html = html.replace(/\\n*$/, \"\") // Get rid of final new lines\n  html += `</code></div></pre>`\n  return html\n}\n","export const tsconfig = {\n  compilerOptions: `The set of compiler options for your project`,\n  allowJs: `Allow JavaScript files to be a part of your program. Use the \\`checkJS\\` option to get errors from these files.`,\n  allowSyntheticDefaultImports: `Allow 'import x from y' when a module doesn't have a default export.`,\n  allowUmdGlobalAccess: `Allow accessing UMD globals from modules.`,\n  allowUnreachableCode: `Disable error reporting for unreachable code.`,\n  allowUnusedLabels: `Disable error reporting for unused labels.`,\n  alwaysStrict: `Ensure 'use strict' is always emitted.`,\n  assumeChangesOnlyAffectDirectDependencies: `Have recompiles in projects that use [\\`incremental\\`](#incremental) and \\`watch\\` mode assume that changes within a file will only affect files directly depending on it.`,\n  baseUrl: `Specify the base directory to resolve non-relative module names.`,\n  charset: `No longer supported. In early versions, manually set the text encoding for reading files.`,\n  checkJs: `Enable error reporting in type-checked JavaScript files.`,\n  clean: `Delete the outputs of all projects.`,\n  composite: `Enable constraints that allow a TypeScript project to be used with project references.`,\n  declaration: `Generate .d.ts files from TypeScript and JavaScript files in your project.`,\n  declarationDir: `Specify the output directory for generated declaration files.`,\n  declarationMap: `Create sourcemaps for d.ts files.`,\n  diagnostics: `Output compiler performance information after building.`,\n  disableFilenameBasedTypeAcquisition: `Disables inference for type acquisition by looking at filenames in a project.`,\n  disableReferencedProjectLoad: `Reduce the number of projects loaded automatically by TypeScript.`,\n  disableSizeLimit: `Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.`,\n  disableSolutionSearching: `Opt a project out of multi-project reference checking when editing.`,\n  disableSourceOfProjectReferenceRedirect: `Disable preferring source files instead of declaration files when referencing composite projects`,\n  downlevelIteration: `Emit more compliant, but verbose and less performant JavaScript for iteration.`,\n  emitBOM: `Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.`,\n  emitDeclarationOnly: `Only output d.ts files and not JavaScript files.`,\n  emitDecoratorMetadata: `Emit design-type metadata for decorated declarations in source files.`,\n  enable: `Disable the type acquisition for JavaScript projects`,\n  esModuleInterop: `Emit additional JavaScript to ease support for importing CommonJS modules. This enables [\\`allowSyntheticDefaultImports\\`](#allowSyntheticDefaultImports) for type compatibility.`,\n  exactOptionalPropertyTypes: `Differentiate between undefined and not present when type checking`,\n  exclude: `Filters results from the [\\`include\\`](#include) option.`,\n  excludeDirectories: `Remove a list of directories from the watch process.`,\n  excludeFiles: `Remove a list of files from the watch mode's processing.`,\n  experimentalDecorators: `Enable experimental support for TC39 stage 2 draft decorators.`,\n  explainFiles: `Print files read during the compilation including why it was included.`,\n  extendedDiagnostics: `Output more detailed compiler performance information after building.`,\n  extends: `Specify one or more path or node module references to base configuration files from which settings are inherited.`,\n  fallbackPolling: `Specify what approach the watcher should use if the system runs out of native file watchers.`,\n  files: `Include a list of files. This does not support glob patterns, as opposed to [\\`include\\`](#include).`,\n  force: `Build all projects, including those that appear to be up to date`,\n  forceConsistentCasingInFileNames: `Ensure that casing is correct in imports.`,\n  generateCpuProfile: `Emit a v8 CPU profile of the compiler run for debugging.`,\n  importHelpers: `Allow importing helper functions from tslib once per project, instead of including them per-file.`,\n  importsNotUsedAsValues: `Specify emit/checking behavior for imports that are only used for types.`,\n  include: `Specify a list of glob patterns that match files to be included in compilation.`,\n  incremental: `Save .tsbuildinfo files to allow for incremental compilation of projects.`,\n  inlineSourceMap: `Include sourcemap files inside the emitted JavaScript.`,\n  inlineSources: `Include source code in the sourcemaps inside the emitted JavaScript.`,\n  isolatedModules: `Ensure that each file can be safely transpiled without relying on other imports.`,\n  jsx: `Specify what JSX code is generated.`,\n  jsxFactory: `Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'`,\n  jsxFragmentFactory: `Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.`,\n  jsxImportSource: `Specify module specifier used to import the JSX factory functions when using \\`jsx: react-jsx*\\`.`,\n  keyofStringsOnly: `Make keyof only return strings instead of string, numbers or symbols. Legacy option.`,\n  lib: `Specify a set of bundled library declaration files that describe the target runtime environment.`,\n  listEmittedFiles: `Print the names of emitted files after a compilation.`,\n  listFiles: `Print all of the files read during the compilation.`,\n  locale: `Set the language of the messaging from TypeScript. This does not affect emit.`,\n  mapRoot: `Specify the location where debugger should locate map files instead of generated locations.`,\n  maxNodeModuleJsDepth: `Specify the maximum folder depth used for checking JavaScript files from \\`node_modules\\`. Only applicable with [\\`allowJs\\`](#allowJs).`,\n  module: `Specify what module code is generated.`,\n  moduleResolution: `Specify how TypeScript looks up a file from a given module specifier.`,\n  newLine: `Set the newline character for emitting files.`,\n  noEmit: `Disable emitting file from a compilation.`,\n  noEmitHelpers: `Disable generating custom helper functions like \\`__extends\\` in compiled output.`,\n  noEmitOnError: `Disable emitting files if any type checking errors are reported.`,\n  noErrorTruncation: `Disable truncating types in error messages.`,\n  noFallthroughCasesInSwitch: `Enable error reporting for fallthrough cases in switch statements.`,\n  noImplicitAny: `Enable error reporting for expressions and declarations with an implied \\`any\\` type..`,\n  noImplicitOverride: `Ensure overriding members in derived classes are marked with an override modifier.`,\n  noImplicitReturns: `Enable error reporting for codepaths that do not explicitly return in a function.`,\n  noImplicitThis: `Enable error reporting when \\`this\\` is given the type \\`any\\`.`,\n  noImplicitUseStrict: `Disable adding 'use strict' directives in emitted JavaScript files.`,\n  noLib: `Disable including any library files, including the default lib.d.ts.`,\n  noPropertyAccessFromIndexSignature: `Enforces using indexed accessors for keys declared using an indexed type`,\n  noResolve: `Disallow \\`import\\`s, \\`require\\`s or \\`<reference>\\`s from expanding the number of files TypeScript should add to a project.`,\n  noStrictGenericChecks: `Disable strict checking of generic signatures in function types.`,\n  noUncheckedIndexedAccess: `Add \\`undefined\\` to a type when accessed using an index.`,\n  noUnusedLocals: `Enable error reporting when a local variables aren't read.`,\n  noUnusedParameters: `Raise an error when a function parameter isn't read`,\n  out: `Deprecated setting. Use [\\`outFile\\`](#outFile) instead.`,\n  outDir: `Specify an output folder for all emitted files.`,\n  outFile: `Specify a file that bundles all outputs into one JavaScript file. If [\\`declaration\\`](#declaration) is true, also designates a file that bundles all .d.ts output.`,\n  paths: `Specify a set of entries that re-map imports to additional lookup locations.`,\n  plugins: `Specify a list of language service plugins to include.`,\n  preserveConstEnums: `Disable erasing \\`const enum\\` declarations in generated code.`,\n  preserveSymlinks: `Disable resolving symlinks to their realpath. This correlates to the same flag in node.`,\n  preserveWatchOutput: `Disable wiping the console in watch mode`,\n  pretty: `Enable color and formatting in output to make compiler errors easier to read`,\n  reactNamespace: `Specify the object invoked for \\`createElement\\`. This only applies when targeting \\`react\\` JSX emit.`,\n  references: `Specify an array of objects that specify paths for projects. Used in project references.`,\n  removeComments: `Disable emitting comments.`,\n  resolveJsonModule: `Enable importing .json files`,\n  rootDir: `Specify the root folder within your source files.`,\n  rootDirs: `Allow multiple folders to be treated as one when resolving modules.`,\n  skipDefaultLibCheck: `Skip type checking .d.ts files that are included with TypeScript.`,\n  skipLibCheck: `Skip type checking all .d.ts files.`,\n  sourceMap: `Create source map files for emitted JavaScript files.`,\n  sourceRoot: `Specify the root path for debuggers to find the reference source code.`,\n  strict: `Enable all strict type checking options.`,\n  strictBindCallApply: `Check that the arguments for \\`bind\\`, \\`call\\`, and \\`apply\\` methods match the original function.`,\n  strictFunctionTypes: `When assigning functions, check to ensure parameters and the return values are subtype-compatible.`,\n  strictNullChecks: `When type checking, take into account \\`null\\` and \\`undefined\\`.`,\n  strictPropertyInitialization: `Check for class properties that are declared but not set in the constructor.`,\n  stripInternal: `Disable emitting declarations that have \\`@internal\\` in their JSDoc comments.`,\n  suppressExcessPropertyErrors: `Disable reporting of excess property errors during the creation of object literals.`,\n  suppressImplicitAnyIndexErrors: `Suppress [\\`noImplicitAny\\`](#noImplicitAny) errors when indexing objects that lack index signatures.`,\n  synchronousWatchDirectory: `Synchronously call callbacks and update the state of directory watchers on platforms that don\\`t support recursive watching natively.`,\n  target: `Set the JavaScript language version for emitted JavaScript and include compatible library declarations.`,\n  traceResolution: `Log paths used during the [\\`moduleResolution\\`](#moduleResolution) process.`,\n  tsBuildInfoFile: `Specify the folder for .tsbuildinfo incremental compilation files.`,\n  typeAcquisition: `Specify options for automatic acquisition of declaration files.`,\n  typeRoots: `Specify multiple folders that act like \\`./node_modules/@types\\`.`,\n  types: `Specify type package names to be included without being referenced in a source file.`,\n  useDefineForClassFields: `Emit ECMAScript-standard-compliant class fields.`,\n  useUnknownInCatchVariables: `Default catch clause variables as \\`unknown\\` instead of \\`any\\`.`,\n  verbose: `Enable verbose logging`,\n  watchDirectory: `Specify how directories are watched on systems that lack recursive file-watching functionality.`,\n  watchFile: `Specify how the TypeScript watch mode works.`,\n};\n","type Lines = import(\"shiki\").IThemedToken[][]\n\nimport type { IThemedToken } from \"shiki\"\nimport { escapeHtml, Meta } from \"../utils\"\nimport { tsconfig } from \"../tsconfig-oneliners.generated\"\nimport { HtmlRendererOptions, preOpenerFromRenderingOptsWithExtras } from \"./plain\"\n\n/** Uses tmLanguage scopes to determine what the content of the token is */\nconst tokenIsJSONKey = (token: IThemedToken) => {\n  if (!token.explanation) return false\n  return token.explanation.find(e => e.scopes.find(s => s.scopeName.includes(\"support.type.property-name\")))\n}\n\n/** Can you look up the token in the tsconfig reference? */\nconst isKeyInTSConfig = (token: IThemedToken) => {\n  if (token.content === '\"') return\n  const name = token.content.slice(1, token.content.length - 1)\n  return name in tsconfig\n}\n\n/**\n * Renders a TSConfig JSON object with additional LSP-ish information\n * @param lines the result of shiki highlighting\n * @param options shiki display options\n */\nexport function tsconfigJSONRenderer(lines: Lines, options: HtmlRendererOptions, meta: Meta) {\n  let html = \"\"\n\n  html += preOpenerFromRenderingOptsWithExtras(options, meta, [\"tsconfig\", \"lsp\"])\n  if (meta.title) {\n    html += `<div class=\"code-title\">${meta.title}</div>`\n  }\n\n  if (options.langId) {\n    html += `<div class=\"language-id\">${options.langId}</div>`\n  }\n\n  html += `<div class='code-container'><code>`\n\n  lines.forEach(l => {\n    if (l.length === 0) {\n      html += `<div class='line'></div>`\n    } else {\n      html += `<div class='line'>`\n      l.forEach(token => {\n        // This means we're looking at a token which could be '\"module\"', '\"', '\"compilerOptions\"' etc\n        if (tokenIsJSONKey(token) && isKeyInTSConfig(token)) {\n          const key = token.content.slice(1, token.content.length - 1)\n          const oneliner = (tsconfig as Record<string, string>)[key]\n          // prettier-ignore\n          html += `<span style=\"color: ${token.color}\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#${key}'><data-lsp lsp=\"${oneliner}\">${escapeHtml(key)}</data-lsp></a>\"</span>`\n        } else {\n          html += `<span style=\"color: ${token.color}\">${escapeHtml(token.content)}</span>`\n        }\n      })\n      html += `</div>`\n    }\n  })\n\n  html = html.replace(/\\n*$/, \"\") // Get rid of final new lines\n  html += `</code></div></pre>`\n  return html\n}\n","import { getHighlighter, Highlighter, HighlighterOptions, IThemedToken } from \"shiki\"\nimport { twoslasher, TwoSlashOptions, TwoSlashReturn } from \"@typescript/twoslash\"\nimport { twoslashRenderer } from \"./renderers/twoslash\"\nimport { HtmlRendererOptions, plainTextRenderer } from \"./renderers/plain\"\nimport { defaultShikiRenderer } from \"./renderers/shiki\"\nimport { tsconfigJSONRenderer } from \"./renderers/tsconfig\"\nimport { Meta } from \"./utils\"\n\nexport interface TwoslashShikiOptions {\n  /** A way to turn on the try buttons seen on the TS website */\n  addTryButton?: true\n  /** A way to disable implicit React imports on tsx/jsx language codeblocks */\n  disableImplicitReactImport?: true\n  /** A way to add a div wrapper for multi-theme outputs */\n  wrapFragments?: true\n  /** Include JSDoc comments in the hovers */\n  includeJSDocInHover?: true\n  /** Instead of showing twoslash exceptions inline, throw the entire process like it will on CI */\n  alwayRaiseForTwoslashExceptions?: true\n  /** Ignore transforming certain code blocks */\n  ignoreCodeblocksWithCodefenceMeta?: string[]\n}\n\n/** The possible user config, a combination of all shiki, twoslash and twoslash-shiki options */\nexport type UserConfigSettings = HighlighterOptions & TwoSlashOptions & TwoslashShikiOptions\n\n/**\n * This gets filled in by the promise below, then should\n * hopefully be more or less synchronous access by each parse\n * of the highlighter\n */\nlet storedHighlighter: Highlighter = null as any\n\n/**\n * Creates a *cached singleton* Shiki highlighter, this is an async call because of the call to WASM to get\n * the regex parser set up.\n *\n * In other functions, passing a the result of this highlighter function is kind of optional but it's the author's\n * opinion that you should be in control of the highlighter, and not this library.\n *\n */\nexport const createShikiHighlighter = (options: HighlighterOptions) => {\n  if (storedHighlighter) return Promise.resolve(storedHighlighter)\n\n  return getHighlighter(options).then(newHighlighter => {\n    storedHighlighter = newHighlighter\n    return storedHighlighter\n  })\n}\n\n/**\n * Renders a code sample to HTML, automatically taking into account:\n *\n *  - rendering overrides for twoslash and tsconfig\n *  - whether the language exists in shiki\n *\n * @param code the source code to render\n * @param lang the language to use in highlighting\n * @param info additional metadata which lives after the code-fence lang (e.g. `{ twoslash: true }`)\n * @param shikiOptions user settings\n * @param highlighter optional, but you should use it, highlighter\n * @param twoslash optional, but required when info contains 'twoslash' as a string\n */\nexport const renderCodeToHTML = (\n  code: string,\n  lang: string,\n  meta: Meta,\n  shikiOptions?: UserConfigSettings & { themeName: string },\n  highlighter?: Highlighter,\n  twoslash?: TwoSlashReturn\n) => {\n  if (!highlighter && !storedHighlighter) {\n    throw new Error(\"The highlighter object hasn't been initialised via `setupHighLighter` yet in shiki-twoslash\")\n  }\n\n  // Shiki does know the lang, so tokenize\n  const renderHighlighter = highlighter || storedHighlighter\n\n  const renderOpts: HtmlRendererOptions = {\n    fg: renderHighlighter.getForegroundColor(),\n    bg: renderHighlighter.getBackgroundColor(),\n    ...shikiOptions,\n  }\n\n  let tokens: IThemedToken[][]\n  try {\n    // I'm a little unsure about why we need this, perhaps the jsx language\n    // upstream in shiki is broken?\n    const tmpLang = lang === \"jsx\" ? \"tsx\" : lang\n\n    tokens = renderHighlighter.codeToThemedTokens(code, tmpLang as any)\n  } catch (error) {\n    // Shiki doesn't know this lang, so render it as plain text, but\n    // also add a note at the end as a HTML comment\n    const note = `<!-- Note from shiki-twoslash: the language ${lang} was not set up for Shiki to use, and so there is no code highlighting -->`\n    return plainTextRenderer(code, renderOpts, meta) + note\n  }\n\n  // Twoslash specific renderer\n  if (lang && meta.twoslash && twoslash) {\n    return twoslashRenderer(tokens, { ...renderOpts, langId: lang }, twoslash, meta)\n  }\n\n  // TSConfig renderer\n  if (lang && lang.startsWith(\"json\") && meta.tsconfig) {\n    return tsconfigJSONRenderer(tokens, renderOpts, meta)\n  }\n\n  // Otherwise just the normal shiki renderer\n  return defaultShikiRenderer(tokens, { ...renderOpts, langId: lang }, meta)\n}\n\n/**\n * Runs Twoslash over the code passed in with a particular language as the default file.\n */\nexport const runTwoSlash = (input: string, lang: string, settings: UserConfigSettings = {}): TwoSlashReturn => {\n  let code = input\n\n  // Shiki doesn't handle a few filetype mappings, so do that ahead of time. Oddly enough, this also\n  // gets re-done at remark-shiki level\n  const replacer = {\n    json5: \"json\",\n    yml: \"yaml\",\n  }\n\n  // @ts-ignore\n  if (replacer[lang]) lang = replacer[lang]\n\n  const hasReactImport = /^import\\s+React(?:.*)\\s+from\\s+('|\")react\\1/gm\n\n  // Add react import to code samples indicating they're needing react.\n  if ([\"tsx\", \"jsx\"].includes(lang) && !settings.disableImplicitReactImport && !hasReactImport.test(code)) {\n    const reactImport = \"import React from 'react'\\n\"\n    const cutString = \"// ---cut---\\n\"\n    // ^ cutString taken directly from\n    // https://github.com/microsoft/TypeScript-Website/blob/0c8d98a69d520365c1909d536fa1323f03a8438c/packages/ts-twoslasher/src/index.ts#L694\n\n    if (code.includes(cutString)) {\n      code = code\n        .split(cutString)\n        .map((item, index) => (index == 0 ? reactImport.concat(item) : item))\n        .join(cutString)\n    } else {\n      code = [reactImport, cutString, code].join(\"\")\n    }\n  }\n\n  settings.customTags = [\"annotate\", \"log\", \"warn\", \"error\"]\n  const results = twoslasher(code, lang, settings)\n  return results\n}\n\n/** Set of renderers if you want to explicitly call one instead of using renderCodeToHTML */\nexport const renderers = {\n  plainTextRenderer,\n  defaultShikiRenderer,\n  twoslashRenderer,\n  tsconfigJSONRenderer,\n}\n"],"names":["htmlForTags","tags","html","forEach","t","name","annotation","meta","split","text","pop","info","trim","flipped","includes","settings","arrowRot","textDegree","top","line","theInfo","specificSettings","JSON","parse","_extends","error","TwoslashError","stringify","message","arrowSVG","arrow","style","leftInner","rightInner","inner","rot","createHighlightedString","ranges","targetedWord","tag","x","makeTagFromRange","r","close","classes","lsp","htmlAttrReplacer","underLineTargetedWord","sort","a","b","precedenceOf","indexOf","cmp","begin","end","cursor","nest","data","stack","shift","substring","some","length","htmlAttrUnReplacer","replaceTripleArrow","stripHTML","str","replace","subTripleArrow","replaceTripleArrowEncoded","table","toString","chr","escapeHtml","shouldBeHighlightable","highlight","Object","keys","find","key","isNaN","parseInt","shouldHighlightLine","lines","push","_key$split","first","last","lastIndex","i","preOpenerFromRenderingOptsWithExtras","opts","bg","fg","theme","themeName","classList","title","concat","filter","Boolean","join","attributes","entries","entry","map","_ref","value","plainTextRenderer","code","options","langId","twoslashRenderer","twoslash","hasHighlight","hl","errorsGroupedByLine","groupBy","errors","e","Map","staticQuickInfosGroupedByLine","staticQuickInfos","q","queriesGroupedByLine","queries","tagsGroupedByLine","filePos","l","get","lspValues","hiClass","prefix","emptyLine","tokenPos","token","targetedQueryWord","tokenContent","findTokenFunc","start","character","content","errorsInToken","lspResponsesInToken","queriesInToken","response","allTokens","allTokensByStart","_targetedQueryWord","range","kind","lspText","includeJSDocInHover","docs","color","messages","renderedMessage","codes","query","queryTextWithPrefix","halfWayAcrossTheTargetedWord","repeat","completions","padStart","offset","prefixed","c","startsWith","completionsPrefix","lis","localeCompare","after","substr","_query$completionsPre","isDeprecated","_c$kindModifiers","kindModifiers","liClass","errorSVG","warningSVG","logSVG","addTryButton","playgroundLink","playgroundURL","list","keyGetter","item","collection","set","defaultShikiRenderer","cssDeclarations","fontStyle","shiki","FontStyle","Italic","Bold","Underline","tsconfig","compilerOptions","allowJs","allowSyntheticDefaultImports","allowUmdGlobalAccess","allowUnreachableCode","allowUnusedLabels","alwaysStrict","assumeChangesOnlyAffectDirectDependencies","baseUrl","charset","checkJs","clean","composite","declaration","declarationDir","declarationMap","diagnostics","disableFilenameBasedTypeAcquisition","disableReferencedProjectLoad","disableSizeLimit","disableSolutionSearching","disableSourceOfProjectReferenceRedirect","downlevelIteration","emitBOM","emitDeclarationOnly","emitDecoratorMetadata","enable","esModuleInterop","exactOptionalPropertyTypes","exclude","excludeDirectories","excludeFiles","experimentalDecorators","explainFiles","extendedDiagnostics","fallbackPolling","files","force","forceConsistentCasingInFileNames","generateCpuProfile","importHelpers","importsNotUsedAsValues","include","incremental","inlineSourceMap","inlineSources","isolatedModules","jsx","jsxFactory","jsxFragmentFactory","jsxImportSource","keyofStringsOnly","lib","listEmittedFiles","listFiles","locale","mapRoot","maxNodeModuleJsDepth","module","moduleResolution","newLine","noEmit","noEmitHelpers","noEmitOnError","noErrorTruncation","noFallthroughCasesInSwitch","noImplicitAny","noImplicitOverride","noImplicitReturns","noImplicitThis","noImplicitUseStrict","noLib","noPropertyAccessFromIndexSignature","noResolve","noStrictGenericChecks","noUncheckedIndexedAccess","noUnusedLocals","noUnusedParameters","out","outDir","outFile","paths","plugins","preserveConstEnums","preserveSymlinks","preserveWatchOutput","pretty","reactNamespace","references","removeComments","resolveJsonModule","rootDir","rootDirs","skipDefaultLibCheck","skipLibCheck","sourceMap","sourceRoot","strict","strictBindCallApply","strictFunctionTypes","strictNullChecks","strictPropertyInitialization","stripInternal","suppressExcessPropertyErrors","suppressImplicitAnyIndexErrors","synchronousWatchDirectory","target","traceResolution","tsBuildInfoFile","typeAcquisition","typeRoots","types","useDefineForClassFields","useUnknownInCatchVariables","verbose","watchDirectory","watchFile","tokenIsJSONKey","explanation","scopes","s","scopeName","isKeyInTSConfig","slice","tsconfigJSONRenderer","oneliner","storedHighlighter","createShikiHighlighter","Promise","resolve","getHighlighter","then","newHighlighter","renderCodeToHTML","lang","shikiOptions","highlighter","Error","renderHighlighter","renderOpts","getForegroundColor","getBackgroundColor","tokens","tmpLang","codeToThemedTokens","note","runTwoSlash","input","replacer","json5","yml","hasReactImport","disableImplicitReactImport","test","reactImport","cutString","index","customTags","results","twoslasher","renderers"],"mappings":"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"}