"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[7413],{2792:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=r(4848),t=r(8453);const a={sidebar_position:1},o=void 0,i={id:"New Features/Numeral Parsing",title:"Numeral Parsing",description:"Pluto makes two small changes to numeral parsing.",source:"@site/docs/New Features/Numeral Parsing.md",sourceDirName:"New Features",slug:"/New Features/Numeral Parsing",permalink:"/docs/New Features/Numeral Parsing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Named Varargs",permalink:"/docs/New Features/Named Varargs"},next:{title:"String Indexing",permalink:"/docs/New Features/String Indexing"}},l={},c=[{value:"Cosmetic Underscores",id:"cosmetic-underscores",level:2},{value:"Binary Integers",id:"binary-integers",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Pluto makes two small changes to numeral parsing."}),"\n",(0,s.jsx)(n.h2,{id:"cosmetic-underscores",children:"Cosmetic Underscores"}),"\n",(0,s.jsx)(n.p,{children:"You can add underscores to your numeric literals to make them more readable."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-pluto",metastring:'showLineNumbers title="Example Code"',children:"local n = 10_000_000\nassert(n == 10000000)\n"})}),"\n",(0,s.jsx)(n.p,{children:"These underscores are ignored by the compiler, so they are purely cosmetic."}),"\n",(0,s.jsx)(n.h2,{id:"binary-integers",children:"Binary Integers"}),"\n",(0,s.jsx)(n.p,{children:"Similar to how Lua allows you to input numbers in hexadecimal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-pluto",metastring:'showLineNumbers title="Example Code"',children:"local n = 0x420\nassert(n == 1056)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Pluto allows you to input numbers in binary as well:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-pluto",metastring:'showLineNumbers title="Example Code"',children:"local n = 0b1000101\nassert(n == 69)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var s=r(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);