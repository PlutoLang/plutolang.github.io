"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[1100],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),i=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=i(e.components);return a.createElement(u.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},O=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=i(t),O=r,d=m["".concat(u,".").concat(O)]||m[O]||c[O]||o;return t?a.createElement(d,l(l({ref:n},p),{},{components:t})):a.createElement(d,l({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=O;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s[m]="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}O.displayName="MDXCreateElement"},3344:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=t(7462),r=(t(7294),t(3905));const o={},l=void 0,s={unversionedId:"New Syntax/Enumerations",id:"New Syntax/Enumerations",title:"Enumerations",description:"Pluto adds the following syntax:",source:"@site/docs/New Syntax/Enumerations.md",sourceDirName:"New Syntax",slug:"/New Syntax/Enumerations",permalink:"/docs/New Syntax/Enumerations",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Continue Statement",permalink:"/docs/New Syntax/Continue Statement"},next:{title:"Lambda Expressions",permalink:"/docs/New Syntax/Lambda Expressions"}},u={},i=[{value:"Scoped Enums",id:"scoped-enums",level:2},{value:"Reflection",id:"reflection",level:2},{value:"Anonymous Enums",id:"anonymous-enums",level:2},{value:"Using Compatibility Mode?",id:"using-compatibility-mode",level:2}],p={toc:i},m="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Pluto adds the following syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},"enum MyEnum begin\n    OPTION_1,\n    OPTION_2,\n    OPTION_3\nend\n\nassert(OPTION_1 == 1)\nassert(OPTION_2 == 2)\nassert(OPTION_3 == 3)\n")),(0,r.kt)("p",null,"Enums can start at a base number, and increment from there."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},"enum MyEnum begin\n    OPTION_1 = 0,\n    OPTION_2,\n    OPTION_3 = 5,\n    OPTION_4\nend\n\nassert(OPTION_1 == 0)\nassert(OPTION_2 == 1)\nassert(OPTION_3 == 5)\nassert(OPTION_4 == 6)\n")),(0,r.kt)("p",null,"Since this enum has a name, we can also access its enumerators with that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},"assert(MyEnum.OPTIION_1 == 0)\n")),(0,r.kt)("h2",{id:"scoped-enums"},"Scoped Enums"),(0,r.kt)("p",null,"You can force usage of the ENUM.ENUMERATOR syntax by using 'enum class':"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},"enum class MyEnum begin\n    OPTION_1,\n    OPTION_2,\n    OPTION_3\nend\n\nassert(OPTION_1 == nil)\nassert(MyEnum.OPTION_1 == 1)\n")),(0,r.kt)("h2",{id:"reflection"},"Reflection"),(0,r.kt)("p",null,"When you have a named enum, not only can you get its enumerators, but also reflect upon it with some methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'enum MyEnum begin\n    OPTION_1,\n    OPTION_2,\n    OPTION_3\nend\n\nfor k, v in MyEnum:kvmap() do\n    print(k, v) -- "OPTION_1    1" ...\nend\n')),(0,r.kt)("p",null,"The following methods are available: ",(0,r.kt)("inlineCode",{parentName:"p"},":names()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":values()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":kvmap()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":vkmap()")),(0,r.kt)("h2",{id:"anonymous-enums"},"Anonymous Enums"),(0,r.kt)("p",null,"Enums can also be anonymous:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},"enum begin\n    OPTION_1,\n    OPTION_2,\n    OPTION_3\nend\n\nassert(OPTION_1 == 1)\nassert(OPTION_2 == 2)\nassert(OPTION_3 == 3)\n")),(0,r.kt)("h2",{id:"using-compatibility-mode"},"Using Compatibility Mode?"),(0,r.kt)("p",null,"You may need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"pluto_enum")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"enum"),"."))}c.isMDXComponent=!0}}]);