"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[7234],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),f=a,h=c["".concat(l,".").concat(f)]||c[f]||d[f]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5630:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:13},i=void 0,s={unversionedId:"New Features/In Expressions",id:"New Features/In Expressions",title:"In Expressions",description:"Searching a string for a substring, or searching an array for an element is a very simple operation now. The in operator has been extended to support these operations.",source:"@site/docs/New Features/In Expressions.md",sourceDirName:"New Features",slug:"/New Features/In Expressions",permalink:"/docs/New Features/In Expressions",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Type Hinting",permalink:"/docs/New Features/Type Hinting"},next:{title:"Named Varargs",permalink:"/docs/New Features/Named Varargs"}},l={},p=[{value:"Rules",id:"rules",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Searching a string for a substring, or searching an array for an element is a very simple operation now. The ",(0,a.kt)("inlineCode",{parentName:"p"},"in")," operator has been extended to support these operations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:'showLineNumbers title="Searching for a substring."',showLineNumbers:!0,title:'"Searching',for:!0,a:!0,'substring."':!0},'local a = "hello"\nlocal b = "hello world"\n\nlocal r1 = a in b\nlocal r2 = "hello" in b\nlocal r3 = a in "hello world"\nlocal r4 = "hello" in "hello world"\nlocal r5 = "goodbye" in "hello world"\n\nassert(r1 and r2 and r3 and r4) -- They\'ll all return true.\nassert(r5 == false) -- Except this one.\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:'showLineNumbers title="Searching a table for keys and elements."',showLineNumbers:!0,title:'"Searching',a:!0,table:!0,for:!0,keys:!0,and:!0,'elements."':!0},'local t = { [5] = "five", [6] = "six", [7] = "seven", key = "value" }\n\nassert(("key" in t) == true) -- Found a key with the value of \'key\'.\nassert((5 in t) == true) -- Found a key with the value of \'5\'.\nassert((3 in t) == false) -- No key with the value of \'3\'.\n')),(0,a.kt)("h2",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The right-hand operand must always be a table or a string."),(0,a.kt)("li",{parentName:"ul"},"The left-hand operand must be a string if the right-hand operand is a string."),(0,a.kt)("li",{parentName:"ul"},"The left-hand operand can be anything if the right-hand operand is a table.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The bytecode of this feature is not backwards-compatible with Lua.")))}d.isMDXComponent=!0}}]);