"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[4084],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(r),d=o,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7684:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},l=void 0,i={unversionedId:"QoL Improvements/Let Alias For Local",id:"QoL Improvements/Let Alias For Local",title:"Let Alias For Local",description:"You can optionally use 'let' instead of 'local' when declaring scoped variables.",source:"@site/docs/QoL Improvements/Let Alias For Local.md",sourceDirName:"QoL Improvements",slug:"/QoL Improvements/Let Alias For Local",permalink:"/docs/QoL Improvements/Let Alias For Local",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Improved Iteration",permalink:"/docs/QoL Improvements/Improved Iteration"},next:{title:"Optional Parentheses",permalink:"/docs/QoL Improvements/Optional Parentheses"}},p={},c=[{value:"For integrators",id:"for-integrators",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can optionally use 'let' instead of 'local' when declaring scoped variables."),(0,o.kt)("p",null,"To enable the ",(0,o.kt)("inlineCode",{parentName:"p"},"let")," keyword, simply do:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-pluto"},"pluto_use let\n")),(0,o.kt)("p",null,"The usage is exactly the same as the ",(0,o.kt)("inlineCode",{parentName:"p"},"local")," keyword."),(0,o.kt)("p",null,"However, note that this will make ",(0,o.kt)("inlineCode",{parentName:"p"},"let")," a reserved keyword, so you can't name any variables as such.\nIf this is causing ambiguities in your script, you can disable it again after you're done with it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-pluto"},"pluto_use let = false\n")),(0,o.kt)("h2",{id:"for-integrators"},"For integrators"),(0,o.kt)("p",null,"You can enable ",(0,o.kt)("inlineCode",{parentName:"p"},"let")," in your Pluto environment by default by defining the ",(0,o.kt)("inlineCode",{parentName:"p"},"PLUTO_USE_LET")," macro in ",(0,o.kt)("inlineCode",{parentName:"p"},"luaconf.h")," or your build config."))}m.isMDXComponent=!0}}]);