"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[816],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,m=s["".concat(u,".").concat(d)]||s[d]||f[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},734:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,l={unversionedId:"For Integrators/VM Dump",id:"For Integrators/VM Dump",title:"VM Dump",description:"Pluto offers an optional, configurable feature to see every instruction that is executed in the Lua VM.",source:"@site/docs/For Integrators/VM Dump.md",sourceDirName:"For Integrators",slug:"/For Integrators/VM Dump",permalink:"/docs/For Integrators/VM Dump",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infinite Loop Prevention",permalink:"/docs/For Integrators/Infinite Loop Prevention"}},u={},c=[{value:"Configuration",id:"configuration",level:2},{value:"What it looks like",id:"what-it-looks-like",level:2}],p={toc:c},s="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Pluto offers an optional, configurable feature to see every instruction that is executed in the Lua VM."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"VM Dump can be enabled by defining ",(0,o.kt)("inlineCode",{parentName:"p"},"PLUTO_VMDUMP")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"luaconf.h")," or your build config."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To reduce noise, you can modify ",(0,o.kt)("inlineCode",{parentName:"li"},"PLUTO_VMDUMP_COND")," to set a custom condition for when VM Dump is active. By default, the condition is ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,o.kt)("li",{parentName:"ul"},"Although not a configuration specific to VM Dump, it should be noted that you can modify the output macros ",(0,o.kt)("inlineCode",{parentName:"li"},"lua_writestring")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"lua_writeline"),".")),(0,o.kt)("h2",{id:"what-it-looks-like"},"What it looks like"),(0,o.kt)("p",null,"Given the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-pluto",metastring:"showLineNumbers",showLineNumbers:!0},'local value = 3\nswitch value do\n  case 1:\n  case 2:\n  case 3:\n  case 4:\n  case 5:\n    print("Got 1-5.")\n    break\n  default:\n    print("Value is greater than 5.")\nend\n-- Break jumps here.\n')),(0,o.kt)("p",null,"It will output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"VARARGPREP 0        ; prepare for 0 varargs\nLOADI      0 3      ; push 3\nMOVE       1 0      ; move 3 into R(A)\nEQI        1 1 0    ; 3 == 1\nEQI        1 2 1    ; 3 == 2\nEQI        1 3 1    ; 3 == 3\nGETTABUP   2 0 0    ; push T['print'] for function-0x247d2882520 (T=table-0x247d29ec9c8)                                              \nLOADK      3 1      ; push \"Got 1-5.\"\n<OUTPUT> Got 1-5.\nCALL       2 2 1    ; call cfunc (nresults=0 nparams=0)                                                                                                              \nJMP        13       ; offset=13 newpc=0x247d29e90d8\nRETURN     1 1 1    ; return 0 value(s)\n")))}f.isMDXComponent=!0}}]);