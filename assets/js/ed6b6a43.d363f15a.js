"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[1680],{3448:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=s(4848),t=s(8453);const o={sidebar_position:9},a=void 0,i={id:"New Features/Enumerations",title:"Enumerations",description:"Pluto adds the following syntax:",source:"@site/docs/New Features/Enumerations.md",sourceDirName:"New Features",slug:"/New Features/Enumerations",permalink:"/docs/New Features/Enumerations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Ternary Expressions",permalink:"/docs/New Features/Ternary Expressions"},next:{title:"For-As Loop",permalink:"/docs/New Features/For-As Loop"}},l={},c=[{value:"Scoped Enums",id:"scoped-enums",level:2},{value:"Reflection",id:"reflection",level:2},{value:"Anonymous Enums",id:"anonymous-enums",level:2},{value:"Using Compatibility Mode?",id:"using-compatibility-mode",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Pluto adds the following syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:"enum MyEnum begin\r\n    OPTION_1,\r\n    OPTION_2,\r\n    OPTION_3\r\nend\r\n\r\nassert(OPTION_1 == 1)\r\nassert(OPTION_2 == 2)\r\nassert(OPTION_3 == 3)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enums can start at a base number, and increment from there."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:"enum MyEnum begin\r\n    OPTION_1 = 0,\r\n    OPTION_2,\r\n    OPTION_3 = 5,\r\n    OPTION_4\r\nend\r\n\r\nassert(OPTION_1 == 0)\r\nassert(OPTION_2 == 1)\r\nassert(OPTION_3 == 5)\r\nassert(OPTION_4 == 6)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Since this enum has a name, we can also access its enumerators with that:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:"assert(MyEnum.OPTIION_1 == 0)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"scoped-enums",children:"Scoped Enums"}),"\n",(0,r.jsx)(n.p,{children:"You can force usage of the ENUM.ENUMERATOR syntax by using 'enum class':"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:"enum class MyEnum begin\r\n    OPTION_1,\r\n    OPTION_2,\r\n    OPTION_3\r\nend\r\n\r\nassert(OPTION_1 == nil)\r\nassert(MyEnum.OPTION_1 == 1)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"reflection",children:"Reflection"}),"\n",(0,r.jsx)(n.p,{children:"When you have a named enum, not only can you get its enumerators, but also reflect upon it with some methods:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:'enum MyEnum begin\r\n    OPTION_1,\r\n    OPTION_2,\r\n    OPTION_3\r\nend\r\n\r\nfor k, v in MyEnum:kvmap() do\r\n    print(k, v) -- "OPTION_1    1" ...\r\nend\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The following methods are available: ",(0,r.jsx)(n.code,{children:":names()"}),", ",(0,r.jsx)(n.code,{children:":values()"}),", ",(0,r.jsx)(n.code,{children:":kvmap()"}),", ",(0,r.jsx)(n.code,{children:":vkmap()"})]}),"\n",(0,r.jsx)(n.h2,{id:"anonymous-enums",children:"Anonymous Enums"}),"\n",(0,r.jsx)(n.p,{children:"Enums can also be anonymous:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-pluto",children:"enum begin\r\n    OPTION_1,\r\n    OPTION_2,\r\n    OPTION_3\r\nend\r\n\r\nassert(OPTION_1 == 1)\r\nassert(OPTION_2 == 2)\r\nassert(OPTION_3 == 3)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"using-compatibility-mode",children:"Using Compatibility Mode?"}),"\n",(0,r.jsxs)(n.p,{children:["You may need to use ",(0,r.jsx)(n.code,{children:"pluto_enum"})," instead of ",(0,r.jsx)(n.code,{children:"enum"}),". Alternatively, ",(0,r.jsx)(n.code,{children:"pluto_use enum"})," will enable the keyword independently of environment settings."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(6540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);