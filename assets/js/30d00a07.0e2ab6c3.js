"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[5091],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||l;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8188:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:10},o=void 0,i={unversionedId:"New Features/Switch Blocks",id:"New Features/Switch Blocks",title:"Switch Blocks",description:"Switch blocks consists of the following new keywords:",source:"@site/docs/New Features/Switch Blocks.md",sourceDirName:"New Features",slug:"/New Features/Switch Blocks",permalink:"/docs/New Features/Switch Blocks",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"For-As Loop",permalink:"/docs/New Features/For-As Loop"},next:{title:"Default Arguments",permalink:"/docs/New Features/Default Arguments"}},s={},c=[{value:"Switch Statement",id:"switch-statement",level:2},{value:"Try It Yourself",id:"try-it-yourself",level:4},{value:"Case Blocks",id:"case-blocks",level:2},{value:"Switch Expression",id:"switch-expression",level:2},{value:"Try It Yourself",id:"try-it-yourself-1",level:4},{value:"Try It Yourself",id:"try-it-yourself-2",level:4},{value:"Using Compatibility Mode?",id:"using-compatibility-mode",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Switch blocks consists of the following new keywords:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"case")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"switch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default"))),(0,r.kt)("h2",{id:"switch-statement"},"Switch Statement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local value = 1\nswitch value do\n    case 1:\n        print("There is only one!")\n        break\n    case 2:\n        print("There is only two!")\n        break\nend\n-- Break jumps here.\n')),(0,r.kt)("p",null,"Switch statements also support fallthrough."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local value = 1\nswitch value do\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n        print("Got 1-5.")\n        break\n    default:\n        print("Value is greater than 5.")\nend\n-- Break jumps here.\n')),(0,r.kt)("p",null,"In this example, cases 1-4 fall through to case 5."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Remember to use break whenever you do not want fallthrough"),". Here is an example of a potential bug:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local value = 1\nswitch value do\n    case 1:\n        print("There is only one!")\n    case 2:\n        print("There is only two!")\nend\n\n-- Output:\n--  There is only one!\n--  There is only two! <-- Uh oh.\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," case is executed if none of the other cases are true. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local value = 1\nswitch value do\n    case 2:\n    case 3:\n        break\n\n    default:\n        print("Value is neither 2 nor 3!")\nend\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," case can be placed anywhere in the block. It also supports fallthrough, so remember to use ",(0,r.kt)("inlineCode",{parentName:"p"},"break")," if you place it above any cases."),(0,r.kt)("h4",{id:"try-it-yourself"},(0,r.kt)("a",{parentName:"h4",href:"https://pluto-lang.org/web/#code=local%20value%20%3D%203%0D%0Aswitch%20value%20do%0D%0A%20%20case%201%3A%0D%0A%20%20case%202%3A%0D%0A%20%20case%203%3A%0D%0A%20%20case%204%3A%0D%0A%20%20case%205%3A%0D%0A%20%20%20%20print%20%22Got%201-5.%22%0D%0A%20%20%20%20break%0D%0A%20%20default%3A%0D%0A%20%20%20%20print%20%22Value%20is%20greater%20than%205.%22%0D%0Aend%0D%0A--%20Break%20jumps%20here."},"Try It Yourself")),(0,r.kt)("h2",{id:"case-blocks"},"Case Blocks"),(0,r.kt)("p",null,"Any expression can be used for the case condition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'switch true do\n    case 42 == 42:\n        print("42 is 42 is true")\n        break\nend\n')),(0,r.kt)("p",null,"There is a short-hand fallthrough syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'switch value do\n    case 1, 2, 3:\n        print("1-3")\n        break\n    case 4, 5, 6:\n        print("4-6")\n        break\nend\n')),(0,r.kt)("p",null,"However, note that method calls needs to be encapsulated with parentheses:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local t = {\n    function getVal()\n        return 42\n    end\n}\nswitch 42 do\n// ERROR:\n    case t:getVal(): -- This is interpreted as case t: getVal():print...\n// ERROR:\n        print("val is 42")\n// ERROR:\n        break\n    case (t:getVal()):\n        print("val is 42")\n        break\nend\n')),(0,r.kt)("h2",{id:"switch-expression"},"Switch Expression"),(0,r.kt)("p",null,"Just like ternary expressions, these allow you to conditionally provide values, with massively simplified case blocks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local place = 1\nplace = switch place do\n    case 1 -> "1st"\n    case 2 -> "2nd"\n    case 3 -> "3rd"\n    default -> $"{place}th"\nend\nprint(place) --\x3e 1st\n')),(0,r.kt)("p",null,"Note that the case blocks here have their conditions delimited by an arrow (->) instead of a colon (:)."),(0,r.kt)("h4",{id:"try-it-yourself-1"},(0,r.kt)("a",{parentName:"h4",href:"https://pluto-lang.org/web/#code=local%20place%20%3D%201%0D%0Aplace%20%3D%20switch%20place%20do%0D%0A%20%20%20%20case%201%20-%3E%20%221st%22%0D%0A%20%20%20%20case%202%20-%3E%20%222nd%22%0D%0A%20%20%20%20case%203%20-%3E%20%223rd%22%0D%0A%20%20%20%20default%20-%3E%20%24%22%7Bplace%7Dth%22%0D%0Aend%0D%0Aprint(place)"},"Try It Yourself")),(0,r.kt)("p",null,"Despite not being able to manually fall through, the shorthand fallthrough syntax still works:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pluto"},'local function print_range(value)\n    print(switch value do\n        case 1, 2, 3 -> "1-3"\n        case 4, 5, 6 -> "4-6"\n    end)\nend\nprint_range(1) --\x3e 1-3\nprint_range(6) --\x3e 4-6\nprint_range(9) --\x3e nil\n')),(0,r.kt)("p",null,"Notice how the ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," case was omitted in this example, so it was implicitly set to ",(0,r.kt)("inlineCode",{parentName:"p"},"default -> nil"),"."),(0,r.kt)("h4",{id:"try-it-yourself-2"},(0,r.kt)("a",{parentName:"h4",href:"https://pluto-lang.org/web/#code=local%20function%20print_range(value)%0D%0A%20%20%20%20print(switch%20value%20do%0D%0A%20%20%20%20%20%20%20%20case%201%2C%202%2C%203%20-%3E%20%221-3%22%0D%0A%20%20%20%20%20%20%20%20case%204%2C%205%2C%206%20-%3E%20%224-6%22%0D%0A%20%20%20%20end)%0D%0Aend%0D%0Aprint_range(1)%20--%3E%20%221-3%22%0D%0Aprint_range(6)%20--%3E%20%224-6%22%0D%0Aprint_range(9)%20--%3E%20nil"},"Try It Yourself")),(0,r.kt)("h2",{id:"using-compatibility-mode"},"Using Compatibility Mode?"),(0,r.kt)("p",null,"You may need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"pluto_switch")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"switch"),". Alternatively, ",(0,r.kt)("inlineCode",{parentName:"p"},"pluto_use switch")," will enable the keyword independently of environment settings."))}d.isMDXComponent=!0}}]);