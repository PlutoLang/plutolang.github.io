"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[118],{278:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var n=s(4848),o=s(8453);const l={sidebar_position:10},t=void 0,r={id:"Compatibility",title:"Compatibility",description:"How compatible with Lua is Pluto?",source:"@site/docs/Compatibility.md",sourceDirName:".",slug:"/Compatibility",permalink:"/docs/Compatibility",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Table Length",permalink:"/docs/Optimizations/Table Length"},next:{title:"For Integrators",permalink:"/docs/For Integrators"}},c={},d=[{value:"How compatible with Lua is Pluto?",id:"how-compatible-with-lua-is-pluto",level:2},{value:"Where are the incompatibilities?",id:"where-are-the-incompatibilities",level:3},{value:"How to fix it?",id:"how-to-fix-it",level:3},{value:"For Scripters",id:"for-scripters",level:2},{value:"Compile-time Configuration (pluto_use)",id:"compile-time-configuration-pluto_use",level:3},{value:"Compatible Keywords",id:"compatible-keywords",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"how-compatible-with-lua-is-pluto",children:"How compatible with Lua is Pluto?"}),"\n",(0,n.jsx)(i.p,{children:"Pluto is compatible with most Lua source code. However, it's imperfect. Due to that, Pluto has several compatibility options."}),"\n",(0,n.jsx)(i.h3,{id:"where-are-the-incompatibilities",children:"Where are the incompatibilities?"}),"\n",(0,n.jsx)(i.p,{children:"Pluto adds the following reserved tokens:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"switch"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"continue"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"enum"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"new"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"class"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"parent"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"export"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"try"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"catch"})}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Which means you can't use them as identifiers. They can still be used with short-hand table indexes and goto labels because Pluto ",(0,n.jsx)(i.a,{href:"QoL%20Improvements/Reserved%20Identifiers",children:"allows reserved keywords to be used in those contexts"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"how-to-fix-it",children:"How to fix it?"}),"\n",(0,n.jsx)(i.p,{children:"All of these incompatible keywords can be disabled:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"For Integrators:"})," Check your ",(0,n.jsx)(i.code,{children:"luaconf.h"}),' file to find the relevant macros under the "Compatibility" heading.']}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"For Scripters:"})," Use ",(0,n.jsx)(i.code,{children:"pluto_use"})," in the source files. ",(0,n.jsx)(i.code,{children:"-- @pluto_use * = false"})," to simply disable all incompatible keywords."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"For Users:"})," Pass the ",(0,n.jsx)(i.code,{children:"-c"})," flag to ",(0,n.jsx)(i.code,{children:"pluto"})," or ",(0,n.jsx)(i.code,{children:"plutoc"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"for-scripters",children:"For Scripters"}),"\n",(0,n.jsx)(i.p,{children:"Scripters are given final say in how Compatibility Mode works within their scripts."}),"\n",(0,n.jsx)(i.h3,{id:"compile-time-configuration-pluto_use",children:"Compile-time Configuration (pluto_use)"}),"\n",(0,n.jsxs)(i.p,{children:["You can change the meaning of Pluto's reserved tokens at any point in your scripts using the ",(0,n.jsx)(i.code,{children:"--@pluto_use"})," comment or ",(0,n.jsx)(i.code,{children:"pluto_use"})," statement."]}),"\n",(0,n.jsxs)(i.p,{children:["For example, to disable all non-compatible keywords except for ",(0,n.jsx)(i.code,{children:"switch"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-pluto",children:"-- @pluto_use * = false, switch\n"})}),"\n",(0,n.jsx)(i.p,{children:"It is also possible to specify a version number, which is a shorthand for the keywords available at that version:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:'"0.2.0"'})," corresponds to ",(0,n.jsx)(i.code,{children:"* = false, switch, continue"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:'"0.5.0"'})," corresponds to ",(0,n.jsx)(i.code,{children:"* = false, switch, continue, enum"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:'"0.6.0"'})," corresponds to ",(0,n.jsx)(i.code,{children:"* = false, switch, continue, enum, new, class, parent, export"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:'"0.8.0"'})," corresponds to ",(0,n.jsx)(i.code,{children:"* = false, switch, continue, enum, new, class, parent, export, try, catch"})]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"So, writing a portable script that only makes use of Pluto 0.8.0's features requires this at the beginning:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-pluto",children:'pluto_use "0.8.0"\n'})}),"\n",(0,n.jsx)(i.p,{children:"This feature also supports quick encompassing of optional features. So, instead of:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-pluto",children:'pluto_use "0.8.0", global\n'})}),"\n",(0,n.jsxs)(i.p,{children:["You can use a '+' after the version number to also enable all of the optional features. As of 0.9.0, the only optional feature is ",(0,n.jsx)(i.a,{href:"New%20Features/Explicit%20Globals",children:"explicit globals"})," (",(0,n.jsx)(i.code,{children:"global"}),")."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-pluto",children:'pluto_use "0.9.0+"\n-- The same as pluto_use "0.9.0", global\n'})}),"\n",(0,n.jsxs)(i.p,{children:["For module developers and scripts which may be used in future versions of Pluto, we recommend you use ",(0,n.jsx)(i.code,{children:"pluto_use"})," for two reasons:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Portability."})," This will override the compatibility mode settings compiled into Pluto so your script will be parsed identically in all Pluto environments."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Proactive compatibility."})," Any keywords added by future versions of Pluto will also be put in compatibility mode by these statements, so in the off-chance your script uses a future reserved keyword as a variable name, it would still parse as you intended when you wrote it."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"compatible-keywords",children:"Compatible Keywords"}),"\n",(0,n.jsxs)(i.p,{children:["Another way of using Pluto's features regardless of compatibility mode is by prefixing the keyword with ",(0,n.jsx)(i.code,{children:"pluto_"}),". For example, ",(0,n.jsx)(i.code,{children:"switch"})," becomes ",(0,n.jsx)(i.code,{children:"pluto_switch"}),". These Compatibility Mode variants will always be valid, even when Compatibility Mode is disabled."]}),"\n",(0,n.jsx)(i.p,{children:"These are what they look like:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_switch"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_continue"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_enum"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_new"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_class"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_parent"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_export"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_try"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"pluto_catch"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>t,x:()=>r});var n=s(6540);const o={},l=n.createContext(o);function t(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);