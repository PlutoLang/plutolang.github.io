"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[2639],{2397:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Runtime Environment/OS","title":"OS","description":"This page documents the changes & additions to the os library in Pluto, which is built on top of Lua 5.4\'s.","source":"@site/docs/Runtime Environment/OS.md","sourceDirName":"Runtime Environment","slug":"/Runtime Environment/OS","permalink":"/docs/Runtime Environment/OS","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Math","permalink":"/docs/Runtime Environment/Math"},"next":{"title":"Regex","permalink":"/docs/Runtime Environment/Regex"}}');var i=o(4848),r=o(8453);const c={},l=void 0,t={},d=[{value:"<code>os.platform</code>",id:"osplatform",level:3},{value:"<code>os.arch</code>",id:"osarch",level:3},{value:"<code>os.sleep</code>",id:"ossleep",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Example",id:"example",level:4},{value:"<code>os.nanos</code>, <code>os.micros</code>, <code>os.millis</code>, <code>os.seconds</code>",id:"osnanos-osmicros-osmillis-osseconds",level:3},{value:"<code>os.unixseconds</code>",id:"osunixseconds",level:3},{value:"<code>os.rename</code>, <code>os.remove</code>",id:"osrename-osremove",level:3}];function a(e){const s={code:"code",div:"div",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["This page documents the changes & additions to the ",(0,i.jsx)(s.code,{children:"os"})," library in Pluto, which is built on top of Lua 5.4's."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"osplatform",children:(0,i.jsx)(s.code,{children:"os.platform"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"os.platform"}),' is a global string containing the host platform. Can be "windows", "wasm", "linux", "macos", "android", or "unknown".']}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"osarch",children:(0,i.jsx)(s.code,{children:"os.arch"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"os.arch"})," is a global string containing the host CPU architecture as well as the bit width, separated by a comma. For example, it would be ",(0,i.jsx)(s.code,{children:"x86, 64-bit"})," for x86_64, ",(0,i.jsx)(s.code,{children:"arm, 64-bit"})," for ARM64, and ",(0,i.jsx)(s.code,{children:"wasm, 32-bit"})," for a typical WebAssembly environment."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"ossleep",children:(0,i.jsx)(s.code,{children:"os.sleep"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"The amount of milliseconds to sleep for."}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(s.pre,{className:"shiki monokai",style:{backgroundColor:"#272822",color:"#F8F8F2"},children:[(0,i.jsx)(s.div,{className:"language-id",children:"pluto"}),(0,i.jsx)(s.div,{className:"code-container",children:(0,i.jsx)(s.code,{children:(0,i.jsxs)(s.div,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"#66D9EF"},children:"os"}),(0,i.jsx)(s.span,{style:{color:"#9F570F"},children:"."}),(0,i.jsx)(s.span,{style:{color:"#66D9EF"},children:"sleep"}),(0,i.jsx)(s.span,{style:{color:"#F8F8F2"},children:"("}),(0,i.jsx)(s.span,{style:{color:"#AE81FF"},children:"1000"}),(0,i.jsx)(s.span,{style:{color:"#F8F8F2"},children:") "}),(0,i.jsx)(s.span,{style:{color:"#88846F"},children:"-- Pause this thread for 1000ms."})]})})})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"osnanos-osmicros-osmillis-osseconds",children:[(0,i.jsx)(s.code,{children:"os.nanos"}),", ",(0,i.jsx)(s.code,{children:"os.micros"}),", ",(0,i.jsx)(s.code,{children:"os.millis"}),", ",(0,i.jsx)(s.code,{children:"os.seconds"})]}),"\n",(0,i.jsx)(s.p,{children:"All of these return their respective times since implementation-specific epoch."}),"\n",(0,i.jsx)(s.h3,{id:"osunixseconds",children:(0,i.jsx)(s.code,{children:"os.unixseconds"})}),"\n",(0,i.jsx)(s.p,{children:"Returns seconds since UNIX epoch."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"osrename-osremove",children:[(0,i.jsx)(s.code,{children:"os.rename"}),", ",(0,i.jsx)(s.code,{children:"os.remove"})]}),"\n",(0,i.jsx)(s.p,{children:"Although we'd rather these functions be in the IO library, these Lua variants are retained, but modified to assume UTF-8 path encoding for the same cross-platform consistency the IO library has."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>c,x:()=>l});var n=o(6540);const i={},r=n.createContext(i);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);