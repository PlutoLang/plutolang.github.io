"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[269],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),f=a,d=c["".concat(i,".").concat(f)]||c[f]||m[f]||o;return r?n.createElement(d,s(s({ref:t},u),{},{components:r})):n.createElement(d,s({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1638:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},s=void 0,l={unversionedId:"New Operators/Walrus Operator",id:"New Operators/Walrus Operator",title:"Walrus Operator",description:"The Walrus operator allows you to perform assignment expresssions, where the second operand to your assignment is the value of the expression.",source:"@site/docs/New Operators/Walrus Operator.md",sourceDirName:"New Operators",slug:"/New Operators/Walrus Operator",permalink:"/docs/New Operators/Walrus Operator",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Null-Coalescing Operator",permalink:"/docs/New Operators/Null-Coalescing Operator"},next:{title:"New Features",permalink:"/docs/category/new-features"}},i={},p=[{value:"Examples",id:"examples",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Walrus operator allows you to perform assignment expresssions, where the second operand to your assignment is the value of the expression."),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:"showLineNumbers",showLineNumbers:!0},"if a := get_value() then\n    -- 'a' was assigned a truthy value.\nelse\n    -- 'a' was assigned a falsy value.\nend\n\n--\x3e This code is semantically equal.\nlocal a = get_value()\nif a then\n    -- 'a' was assigned a truthy value.\nelse\n    -- 'a' was assigned a falsy value.\nend\n")),(0,a.kt)("p",null,"Expressions for the Walrus operator may be evaluated multiple times in circumstances like loops."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:"showLineNumbers",showLineNumbers:!0},"local function get()\n    return true\nend\n\nwhile a := get() do\n    --\x3e This will loop forever. It'll keep evaluating `a := get()`, just like any other condition.\nend\n")),(0,a.kt)("p",null,"Like any other expression, you can also do things like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:"showLineNumbers",showLineNumbers:!0},'if (a := math.random(1, 10)) < 5 then\n    print("A is less than five! Value: " .. a)\nelse\n    print("A is greater than five! Value: " .. a)\nend\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The Walrus operator can be used anywhere an expression is accepted."),(0,a.kt)("li",{parentName:"ul"},"The Walrus operator does not support tuple assignment.")),(0,a.kt)("p",null,"This feature is inspired from Python's implementation, which can be found ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/whatsnew/3.8.html#assignment-expressions"},"here"),"."))}m.isMDXComponent=!0}}]);