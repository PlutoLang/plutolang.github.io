"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[7234],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5630:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const s={sidebar_position:13},o=void 0,i={unversionedId:"New Features/In Expressions",id:"New Features/In Expressions",title:"In Expressions",description:"The in operator has been extended to support string searches and table searches. For these purposes, it's the fastest possible solution.",source:"@site/docs/New Features/In Expressions.md",sourceDirName:"New Features",slug:"/New Features/In Expressions",permalink:"/docs/New Features/In Expressions",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Type Hinting",permalink:"/docs/New Features/Type Hinting"},next:{title:"Named Varargs",permalink:"/docs/New Features/Named Varargs"}},l={},p=[{value:"Rules",id:"rules",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"in")," operator has been extended to support string searches and table searches. For these purposes, it's the fastest possible solution."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:'showLineNumbers title="Searching for a substring."',showLineNumbers:!0,title:'"Searching',for:!0,a:!0,'substring."':!0},'assert("world" in "hello world")\n')),(0,a.kt)("p",null,"When used on tables, the ",(0,a.kt)("inlineCode",{parentName:"p"},"in")," operator searches for ",(0,a.kt)("em",{parentName:"p"},"values"),". It'll search for array ",(0,a.kt)("em",{parentName:"p"},"elements")," and it'll search keys for ",(0,a.kt)("em",{parentName:"p"},"their values"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-pluto",metastring:'showLineNumbers title="Searching a table for a value."',showLineNumbers:!0,title:'"Searching',a:!0,table:!0,for:!0,'value."':!0},'local t = { "a", "b", key = "value" }\n\nassert("a" in t) -- "a" is an element inside of t.\nassert("b" in t) -- "b" is an element inside of t.\nassert("value" in t) -- "value" is the value of a key inside of t.\nassert(not "random" in t) -- "random" is not an element OR the value of a key inside of t.\n')),(0,a.kt)("h2",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The right-hand operand must always be a table or a string."),(0,a.kt)("li",{parentName:"ul"},"The left-hand operand must be a string if the right-hand operand is a string."),(0,a.kt)("li",{parentName:"ul"},"The left-hand operand can be anything if the right-hand operand is a table.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The bytecode of this feature is not backwards-compatible with Lua.")))}d.isMDXComponent=!0}}]);