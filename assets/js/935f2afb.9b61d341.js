"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"What is Pluto?","href":"/docs/Introduction","docId":"Introduction","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/Getting Started","docId":"Getting Started","unlisted":false},{"type":"link","label":"Editor Integration","href":"/docs/Editor Integration","docId":"Editor Integration","unlisted":false},{"type":"link","label":"Beginner\'s Guide","href":"/docs/Beginner\'s Guide","docId":"Beginner\'s Guide","unlisted":false},{"type":"link","label":"New Operators","href":"/docs/New Operators","docId":"New Operators","unlisted":false},{"type":"category","label":"New Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"String Indexing","href":"/docs/New Features/String Indexing","docId":"New Features/String Indexing","unlisted":false},{"type":"link","label":"Numeral Parsing","href":"/docs/New Features/Numeral Parsing","docId":"New Features/Numeral Parsing","unlisted":false},{"type":"link","label":"Break Statement","href":"/docs/New Features/Break Statement","docId":"New Features/Break Statement","unlisted":false},{"type":"link","label":"Continue Statement","href":"/docs/New Features/Continue Statement","docId":"New Features/Continue Statement","unlisted":false},{"type":"link","label":"Lambda Expressions","href":"/docs/New Features/Lambda Expressions","docId":"New Features/Lambda Expressions","unlisted":false},{"type":"link","label":"Table Freezing","href":"/docs/New Features/Table Freezing","docId":"New Features/Table Freezing","unlisted":false},{"type":"link","label":"Export Modifier","href":"/docs/New Features/Export Modifier","docId":"New Features/Export Modifier","unlisted":false},{"type":"link","label":"String Interpolation","href":"/docs/New Features/String Interpolation","docId":"New Features/String Interpolation","unlisted":false},{"type":"link","label":"Ternary Expressions","href":"/docs/New Features/Ternary Expressions","docId":"New Features/Ternary Expressions","unlisted":false},{"type":"link","label":"Enumerations","href":"/docs/New Features/Enumerations","docId":"New Features/Enumerations","unlisted":false},{"type":"link","label":"For-As Loop","href":"/docs/New Features/For-As Loop","docId":"New Features/For-As Loop","unlisted":false},{"type":"link","label":"Switch Blocks","href":"/docs/New Features/Switch Blocks","docId":"New Features/Switch Blocks","unlisted":false},{"type":"link","label":"Default Arguments","href":"/docs/New Features/Default Arguments","docId":"New Features/Default Arguments","unlisted":false},{"type":"link","label":"Named Arguments","href":"/docs/New Features/Named Arguments","docId":"New Features/Named Arguments","unlisted":false},{"type":"link","label":"Type Hinting","href":"/docs/New Features/Type Hinting","docId":"New Features/Type Hinting","unlisted":false},{"type":"link","label":"In Expressions","href":"/docs/New Features/In Expressions","docId":"New Features/In Expressions","unlisted":false},{"type":"link","label":"Named Varargs","href":"/docs/New Features/Named Varargs","docId":"New Features/Named Varargs","unlisted":false},{"type":"link","label":"Destructuring","href":"/docs/New Features/Destructuring","docId":"New Features/Destructuring","unlisted":false},{"type":"link","label":"Constexpr Attribute","href":"/docs/New Features/Constexpr Attribute","docId":"New Features/Constexpr Attribute","unlisted":false},{"type":"link","label":"Safe Navigation","href":"/docs/New Features/Safe Navigation","docId":"New Features/Safe Navigation","unlisted":false},{"type":"link","label":"Compile-Time Evaluation","href":"/docs/New Features/Compile-Time Evaluation","docId":"New Features/Compile-Time Evaluation","unlisted":false},{"type":"link","label":"Compiler Warnings","href":"/docs/New Features/Compiler Warnings","docId":"New Features/Compiler Warnings","unlisted":false},{"type":"link","label":"Object-Oriented Programming","href":"/docs/New Features/Object-Oriented Programming","docId":"New Features/Object-Oriented Programming","unlisted":false},{"type":"link","label":"Try-Catch Statement","href":"/docs/New Features/Try-Catch Statement","docId":"New Features/Try-Catch Statement","unlisted":false}],"href":"/docs/category/new-features"},{"type":"category","label":"QoL Improvements","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Boolean Concatenation","href":"/docs/QoL Improvements/Boolean Concatenation","docId":"QoL Improvements/Boolean Concatenation","unlisted":false},{"type":"link","label":"Generalized Iteration","href":"/docs/QoL Improvements/Generalized Iteration","docId":"QoL Improvements/Generalized Iteration","unlisted":false},{"type":"link","label":"Local Aliases","href":"/docs/QoL Improvements/Local Aliases","docId":"QoL Improvements/Local Aliases","unlisted":false},{"type":"link","label":"Optional Parentheses","href":"/docs/QoL Improvements/Optional Parentheses","docId":"QoL Improvements/Optional Parentheses","unlisted":false},{"type":"link","label":"Removed Locals Limit","href":"/docs/QoL Improvements/Removed Locals Limit","docId":"QoL Improvements/Removed Locals Limit","unlisted":false},{"type":"link","label":"Reserved Identifiers","href":"/docs/QoL Improvements/Reserved Identifiers","docId":"QoL Improvements/Reserved Identifiers","unlisted":false},{"type":"link","label":"Syntax Errors","href":"/docs/QoL Improvements/Syntax Errors","docId":"QoL Improvements/Syntax Errors","unlisted":false}],"href":"/docs/category/qol-improvements"},{"type":"category","label":"Runtime Environment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Global Reference","href":"/docs/Runtime Environment/Global Reference","docId":"Runtime Environment/Global Reference","unlisted":false},{"type":"category","label":"Library Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JSON","href":"/docs/Runtime Environment/Library Reference/JSON","docId":"Runtime Environment/Library Reference/JSON","unlisted":false},{"type":"link","label":"Assert","href":"/docs/Runtime Environment/Library Reference/Assert","docId":"Runtime Environment/Library Reference/Assert","unlisted":false},{"type":"link","label":"Crypto","href":"/docs/Runtime Environment/Library Reference/Crypto","docId":"Runtime Environment/Library Reference/Crypto","unlisted":false},{"type":"link","label":"Base32","href":"/docs/Runtime Environment/Library Reference/Base32","docId":"Runtime Environment/Library Reference/Base32","unlisted":false},{"type":"link","label":"Base64","href":"/docs/Runtime Environment/Library Reference/Base64","docId":"Runtime Environment/Library Reference/Base64","unlisted":false},{"type":"link","label":"URL","href":"/docs/Runtime Environment/Library Reference/URL","docId":"Runtime Environment/Library Reference/URL","unlisted":false}],"href":"/docs/category/library-reference"},{"type":"category","label":"Class Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Exception","href":"/docs/Runtime Environment/Class Reference/Exception","docId":"Runtime Environment/Class Reference/Exception","unlisted":false},{"type":"link","label":"Vector3","href":"/docs/Runtime Environment/Class Reference/Vector3","docId":"Runtime Environment/Class Reference/Vector3","unlisted":false}],"href":"/docs/category/class-reference"}],"href":"/docs/category/runtime-environment"},{"type":"category","label":"Optimizations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"For Loops","href":"/docs/Optimizations/For Loops","docId":"Optimizations/For Loops","unlisted":false},{"type":"link","label":"Jump Table","href":"/docs/Optimizations/Jump Table","docId":"Optimizations/Jump Table","unlisted":false},{"type":"link","label":"Long Jump","href":"/docs/Optimizations/Long Jump","docId":"Optimizations/Long Jump","unlisted":false},{"type":"link","label":"Special Arithmetic","href":"/docs/Optimizations/Special Arithmetic","docId":"Optimizations/Special Arithmetic","unlisted":false},{"type":"link","label":"Table Length","href":"/docs/Optimizations/Table Length","docId":"Optimizations/Table Length","unlisted":false}],"href":"/docs/category/optimizations"},{"type":"link","label":"Compatibility","href":"/docs/Compatibility","docId":"Compatibility","unlisted":false},{"type":"link","label":"For Integrators","href":"/docs/For Integrators","docId":"For Integrators","unlisted":false}]},"docs":{"Beginner\'s Guide":{"id":"Beginner\'s Guide","title":"Beginner\'s Guide","description":"This article is for people completely unfamiliar with Lua who want to jump right into Pluto.","sidebar":"tutorialSidebar"},"Compatibility":{"id":"Compatibility","title":"Compatibility","description":"How compatible with Lua is Pluto?","sidebar":"tutorialSidebar"},"Editor Integration":{"id":"Editor Integration","title":"Editor Integration","description":"Although Pluto can theoretically be used with Lua-based tooling, we provide specialized support for .pluto files to enhance your coding experience with features such as:","sidebar":"tutorialSidebar"},"For Integrators":{"id":"For Integrators","title":"For Integrators","description":"The luaconf.h in Pluto provides various battle-tested mechanisms for locking down your Pluto environments. In this article, we\'ve documented some of those. If you are an integrator who needs help configuring any of this, or who wants us to implement another mechanism, feel free to contact us on GitHub.","sidebar":"tutorialSidebar"},"Getting Started":{"id":"Getting Started","title":"Getting Started","description":"This document will explain how to get started with writing Pluto in no time.","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"What is Pluto?","description":"Pluto is a superset of Lua 5.4 with a focus on general-purpose programming. While being remarkably compatible with Lua 5.4 source-code & bytecode, it enhances the standard library & adds more than a dozen highly-desired syntaxes such as switch statements, compound operators, classes, class inheritance, string interpolation, type hinting, enums, and so on.","sidebar":"tutorialSidebar"},"New Features/Break Statement":{"id":"New Features/Break Statement","title":"Break Statement","description":"This keyword accepts an optional integral argument which tells it how many levels of enclosing loops it should break. The default value is 1, thus breaking out of the current loop.","sidebar":"tutorialSidebar"},"New Features/Compile-Time Evaluation":{"id":"New Features/Compile-Time Evaluation","title":"Compile-Time Evaluation","description":"Pluto\'s parser provides some powerful constructs which allow you to write code that will never be seen at runtime.","sidebar":"tutorialSidebar"},"New Features/Compiler Warnings":{"id":"New Features/Compiler Warnings","title":"Compiler Warnings","description":"Pluto offers optional compiler warnings for certain misbehaviors.","sidebar":"tutorialSidebar"},"New Features/Constexpr Attribute":{"id":"New Features/Constexpr Attribute","title":"Constexpr Attribute","description":"Pluto adds the ` attribute which is a strengthened version of the ` attribute.","sidebar":"tutorialSidebar"},"New Features/Continue Statement":{"id":"New Features/Continue Statement","title":"Continue Statement","description":"Continue statements, like break, are meant to be used in loops. They skip the current iteration of the loop.","sidebar":"tutorialSidebar"},"New Features/Default Arguments":{"id":"New Features/Default Arguments","title":"Default Arguments","description":"During a function declaration, parameters can now declare their own default value.","sidebar":"tutorialSidebar"},"New Features/Destructuring":{"id":"New Features/Destructuring","title":"Destructuring","description":"Destructuring is a better way to assign local variables from expressions that return a table.","sidebar":"tutorialSidebar"},"New Features/Enumerations":{"id":"New Features/Enumerations","title":"Enumerations","description":"Pluto adds the following syntax:","sidebar":"tutorialSidebar"},"New Features/Export Modifier":{"id":"New Features/Export Modifier","title":"Export Modifier","description":"The export modifier allows you to automatically aggregate things you want to export into a table.","sidebar":"tutorialSidebar"},"New Features/For-As Loop":{"id":"New Features/For-As Loop","title":"For-As Loop","description":"When you only want to iterate over the values of a table, you can use Pluto\'s for-as syntax.","sidebar":"tutorialSidebar"},"New Features/In Expressions":{"id":"New Features/In Expressions","title":"In Expressions","description":"The in operator has been extended to support string searches and table searches. For these purposes, it\'s the fastest possible solution.","sidebar":"tutorialSidebar"},"New Features/Lambda Expressions":{"id":"New Features/Lambda Expressions","title":"Lambda Expressions","description":"Lambda expressions are shorthand function objects for evaluating quick expressions. Take this code:","sidebar":"tutorialSidebar"},"New Features/Named Arguments":{"id":"New Features/Named Arguments","title":"Named Arguments","description":"Instead of positional arguments, you can use the names of arguments you want to set:","sidebar":"tutorialSidebar"},"New Features/Named Varargs":{"id":"New Features/Named Varargs","title":"Named Varargs","description":"If you have a function that takes varargs and you want them in a table, you\'d have to do something like this:","sidebar":"tutorialSidebar"},"New Features/Numeral Parsing":{"id":"New Features/Numeral Parsing","title":"Numeral Parsing","description":"Pluto makes two small changes to numeral parsing.","sidebar":"tutorialSidebar"},"New Features/Object-Oriented Programming":{"id":"New Features/Object-Oriented Programming","title":"Object-Oriented Programming","description":"Pluto makes a plethora of improvements when it comes to object-oriented programming.","sidebar":"tutorialSidebar"},"New Features/Safe Navigation":{"id":"New Features/Safe Navigation","title":"Safe Navigation","description":"For Member Access","sidebar":"tutorialSidebar"},"New Features/String Indexing":{"id":"New Features/String Indexing","title":"String Indexing","description":"You can index strings for their characters now, which is cleaner & 3x faster than using string.sub. String indexing only occurs when you index with an integer, either positive or negative. Positive integers index from the start of the string, and negative integers index from the end.","sidebar":"tutorialSidebar"},"New Features/String Interpolation":{"id":"New Features/String Interpolation","title":"String Interpolation","description":"String interpolation is a simple alternative syntax to concatenation.","sidebar":"tutorialSidebar"},"New Features/Switch Blocks":{"id":"New Features/Switch Blocks","title":"Switch Blocks","description":"Switch blocks consists of the following new keywords:","sidebar":"tutorialSidebar"},"New Features/Table Freezing":{"id":"New Features/Table Freezing","title":"Table Freezing","description":"Tables can now be frozen at their current state to forbid any future modification. This action is irreversible and permanent for the lifespan of the table.","sidebar":"tutorialSidebar"},"New Features/Ternary Expressions":{"id":"New Features/Ternary Expressions","title":"Ternary Expressions","description":"Ternary expressions behave identical as to how they would in C. They introduce no new keywords.","sidebar":"tutorialSidebar"},"New Features/Try-Catch Statement":{"id":"New Features/Try-Catch Statement","title":"Try-Catch Statement","description":"Pluto provides a more intuitive way to handle errors than pcall and xpcall.","sidebar":"tutorialSidebar"},"New Features/Type Hinting":{"id":"New Features/Type Hinting","title":"Type Hinting","description":"Type-hinting looks like this:","sidebar":"tutorialSidebar"},"New Operators":{"id":"New Operators","title":"New Operators","description":"Operator Aliases","sidebar":"tutorialSidebar"},"Optimizations/For Loops":{"id":"Optimizations/For Loops","title":"For Loops","description":"The pairs and ipairs functions are optimized in Pluto. On a consistent basis, pairs & ipairs loops are 3.5x faster than their Lua counterparts.","sidebar":"tutorialSidebar"},"Optimizations/Jump Table":{"id":"Optimizations/Jump Table","title":"Jump Table","description":"Lua implemented a jump table, but it is only compatible with clang and gcc. Pluto has an additional jump table implementation for other compilers; however, it is not enabled by default because it can add minutes to compile time, depending on the setup. However, it may be beneficial to you regardless, as a jump table can increase virtual machine performance by up to 5%.","sidebar":"tutorialSidebar"},"Optimizations/Long Jump":{"id":"Optimizations/Long Jump","title":"Long Jump","description":"Although Lua presents the option to use long jumps even when compiling as C++, it doesn\'t default to doing so, instead requiring you to define LUAUSELONGJMP.","sidebar":"tutorialSidebar"},"Optimizations/Special Arithmetic":{"id":"Optimizations/Special Arithmetic","title":"Special Arithmetic","description":"Special arithmetic algorithms are optimized by Pluto during compile-time.","sidebar":"tutorialSidebar"},"Optimizations/Table Length":{"id":"Optimizations/Table Length","title":"Table Length","description":"Pluto will cache the length of a table when you request it for the first time. This cache is refreshed whenever you make an edit to the table. It\'s still advisable to localize this value though, since looking through the cache and the virtual machine is expensive compared to looking up a local.","sidebar":"tutorialSidebar"},"QoL Improvements/Boolean Concatenation":{"id":"QoL Improvements/Boolean Concatenation","title":"Boolean Concatenation","description":"Pluto allows you to concatenate boolean values just like you would number values:","sidebar":"tutorialSidebar"},"QoL Improvements/Generalized Iteration":{"id":"QoL Improvements/Generalized Iteration","title":"Generalized Iteration","description":"It\'s redundant to call the pairs function for simple iteration. This action is now optional, and handled by the virtual machine if the function is absent.","sidebar":"tutorialSidebar"},"QoL Improvements/Local Aliases":{"id":"QoL Improvements/Local Aliases","title":"Local Aliases","description":"Pluto introduces 2 optional shorthands for the local statement.","sidebar":"tutorialSidebar"},"QoL Improvements/Optional Parentheses":{"id":"QoL Improvements/Optional Parentheses","title":"Optional Parentheses","description":"The parenthesis around some types of expressions are optional now.","sidebar":"tutorialSidebar"},"QoL Improvements/Removed Locals Limit":{"id":"QoL Improvements/Removed Locals Limit","title":"Removed Locals Limit","description":"Pluto removes the locals limit, allowing you to use compile-time constants, including enums, as much as you want.","sidebar":"tutorialSidebar"},"QoL Improvements/Reserved Identifiers":{"id":"QoL Improvements/Reserved Identifiers","title":"Reserved Identifiers","description":"Pluto allows you to use reserved tokens such as if from Lua and class from Pluto as identifiers with shorthand table syntax and for goto labels.","sidebar":"tutorialSidebar"},"QoL Improvements/Syntax Errors":{"id":"QoL Improvements/Syntax Errors","title":"Syntax Errors","description":"The messages for syntax errors are enhanced. They include tailored messages and code snippets, which should help newer programmers identify problems quicker. It\'s not a game changer, but it\'s neat.","sidebar":"tutorialSidebar"},"Runtime Environment/Class Reference/Exception":{"id":"Runtime Environment/Class Reference/Exception","title":"Exception","description":"The exception class makes errors easier to parse with where and what members, as opposed to having a string with both.","sidebar":"tutorialSidebar"},"Runtime Environment/Class Reference/Vector3":{"id":"Runtime Environment/Class Reference/Vector3","title":"Vector3","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Global Reference":{"id":"Runtime Environment/Global Reference","title":"Global Reference","description":"Currently, Pluto\'s standard library is built on top of the base Lua 5.4 standard library.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/Assert":{"id":"Runtime Environment/Library Reference/Assert","title":"Assert","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/Base32":{"id":"Runtime Environment/Library Reference/Base32","title":"Base32","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/Base64":{"id":"Runtime Environment/Library Reference/Base64","title":"Base64","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/Crypto":{"id":"Runtime Environment/Library Reference/Crypto","title":"Crypto","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/JSON":{"id":"Runtime Environment/Library Reference/JSON","title":"JSON","description":"Must be included via require.","sidebar":"tutorialSidebar"},"Runtime Environment/Library Reference/URL":{"id":"Runtime Environment/Library Reference/URL","title":"URL","description":"Must be included via require.","sidebar":"tutorialSidebar"}}}')}}]);