"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[1079],{2022:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var t=r(4848),o=r(8453);const a={sidebar_position:1},i=void 0,s={id:"Runtime Environment/Global & Base",title:"Global & Base",description:"This page documents the changes & additions to Pluto's runtime environment, which is built on top of Lua 5.4's.",source:"@site/docs/Runtime Environment/Global & Base.md",sourceDirName:"Runtime Environment",slug:"/Runtime Environment/Global & Base",permalink:"/docs/Runtime Environment/Global & Base",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Runtime Environment",permalink:"/docs/category/runtime-environment"},next:{title:"Coroutine",permalink:"/docs/Runtime Environment/Coroutine"}},l={},c=[{value:"<code>_PVERSION</code>",id:"_pversion",level:3},{value:"<code>_PSOUP</code>",id:"_psoup",level:3},{value:"<code>os.platform</code>",id:"osplatform",level:3},{value:"<code>package.path</code>",id:"packagepath",level:3},{value:"Default Metatables",id:"default-metatables",level:3},{value:"<code>dumpvar</code>",id:"dumpvar",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>exportvar</code>",id:"exportvar",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>range</code>",id:"range",level:3},{value:"<code>compareversions</code>",id:"compareversions",level:3},{value:"<code>wcall</code>",id:"wcall",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This page documents the changes & additions to Pluto's runtime environment, which is built on top of Lua 5.4's."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"_pversion",children:(0,t.jsx)(n.code,{children:"_PVERSION"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"_PVERSION"})," is the global to check your current version of Pluto."]}),"\n",(0,t.jsx)(n.h3,{id:"_psoup",children:(0,t.jsx)(n.code,{children:"_PSOUP"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"_PSOUP"})," is a global boolean you can access to check linkage with Soup. Always true as of 0.8.0."]}),"\n",(0,t.jsx)(n.h3,{id:"osplatform",children:(0,t.jsx)(n.code,{children:"os.platform"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"os.platform"}),' is a global string containing the host platform. Can be "windows", "wasm", "linux", "macos", "android", or "unknown".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'if _PVERSION == nil then\r\n    print("Plain Lua detected (".._VERSION..")")\r\nelse\r\n    io.write("Pluto detected (".._PVERSION.."), based on ".._VERSION)\r\n    if os.platform then\r\n        io.write(", running on "..os.platform)\r\n    end\r\n    io.write("\\n")\r\nend\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"packagepath",children:(0,t.jsx)(n.code,{children:"package.path"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.path"})," is modified to also search for ",(0,t.jsx)(n.code,{children:".pluto"})," files."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"default-metatables",children:"Default Metatables"}),"\n",(0,t.jsx)(n.p,{children:"Tables and coroutines/threads have metatables by default, akin to how each string has a metatable by default."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local t = {}\r\nlocal c = coroutine.create(|| -> do end)\r\n\r\n-- Can do this:\r\nt:contains(1)\r\nt:concat("\\n")\r\nc:resume()\r\n\r\n-- As opposed to this:\r\ntable.contains(t, 1)\r\ntable.concat(t, "\\n")\r\ncoroutine.resume(c)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This behavior is implemented by setting the ",(0,t.jsx)(n.code,{children:"__index"})," metamethod to the respective library (",(0,t.jsx)(n.code,{children:"_G.table"})," or ",(0,t.jsx)(n.code,{children:"_G.coroutine"}),"). If you override the metatable, you may want to replicate that."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"dumpvar",children:(0,t.jsx)(n.code,{children:"dumpvar"})}),"\n",(0,t.jsx)(n.p,{children:"A debug function designed to dump values into human-readable formats."}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The value to dump."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:"A string representation of the value."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local t = {\r\n    ["hello"] = 1234,\r\n    ["goodbye"] = _G.table,\r\n\r\n    ["name"] = "John",\r\n    ["lastname"] = "Doe",\r\n\r\n    ["details"] = {\r\n        "No details available."\r\n    }\r\n}\r\n\r\nprint(dumpvar(t))\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\r\n    ["lastname"] = string(3) "Doe",\r\n    ["name"] = string(4) "John",\r\n    ["goodbye"] = {\r\n        ["unpack"] = function: 00007FF7738B3C20,\r\n        ["insert"] = function: 00007FF7738B30D0,\r\n        ["freeze"] = function: 00007FF7738B43F0,\r\n        ["foreach"] = function: 00007FF7738B3220,\r\n        ["filter"] = function: 00007FF7738B4700,\r\n        ["isfrozen"] = function: 00007FF7738B44B0,\r\n        ["getn"] = function: 00007FF7738B43B0,\r\n        ["pack"] = function: 00007FF7738B3B10,\r\n        ["contains"] = function: 00007FF7738B4540,\r\n        ["move"] = function: 00007FF7738B34D0,\r\n        ["concat"] = function: 00007FF7738B37F0,\r\n        ["sort"] = function: 00007FF7738B42B0,\r\n        ["remove"] = function: 00007FF7738B33C0,\r\n        ["map"] = function: 00007FF7738B49A0,\r\n    },\r\n    ["hello"] = 1234,\r\n    ["details"] = {\r\n        [1] = string(21) "No details available.",\r\n    },\r\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"exportvar",children:(0,t.jsx)(n.code,{children:"exportvar"})}),"\n",(0,t.jsx)(n.p,{children:"Similar to dumpvar, but returns valid Lua/Pluto code. May error if the value can not be represented accordingly."}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The value to dump."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'-- Slightly altered data from last example as C functions can not be exported.\r\nlocal t = {\r\n    ["hello"] = 1234,\r\n\r\n    ["name"] = "John",\r\n    ["lastname"] = "Doe",\r\n\r\n    ["details"] = {\r\n        "No details available."\r\n    }\r\n}\r\n\r\nprint(exportvar(t))\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\r\n    ["hello"] = 1234,\r\n    ["name"] = "John",\r\n    ["details"] = {\r\n        [1] = "No details available.",\r\n    },\r\n    ["lastname"] = "Doe",\r\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"range",children:(0,t.jsx)(n.code,{children:"range"})}),"\n",(0,t.jsx)(n.p,{children:"Returns a table of numbers in the given range."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:"print(range(10):unpack())   --\x3e 1   2   3   4   5   6   7   8   9   10\r\nprint(range(4, 8):unpack()) --\x3e 4   5   6   7   8\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"compareversions",children:(0,t.jsx)(n.code,{children:"compareversions"})}),"\n",(0,t.jsxs)(n.p,{children:["Performs a three-way comparison on 2 version numbers, similar to the ",(0,t.jsx)(n.a,{href:"../New%20Operators#spaceship-operator",children:"Spaceship Operator"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'assert(compareversions("1.0.0", "0.9.0")     >= 0)\r\nassert(compareversions("1.0.0", "1.0.0-dev") >= 0)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note that pre-release versions (e.g. with ",(0,t.jsx)(n.code,{children:"-dev"})," suffix) are considered to be ",(0,t.jsx)(n.em,{children:"less than"})," their final counterparts."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"wcall",children:(0,t.jsx)(n.code,{children:"wcall"})}),"\n",(0,t.jsx)(n.p,{children:"Calls the given function and returns a string of warnings raised by it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local w = wcall(|| -> warn("Bad!"))\r\nprint(w ~= "" ? (w:strip()) : "No warnings")\r\n-- Output: "Bad!"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var t=r(6540);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);