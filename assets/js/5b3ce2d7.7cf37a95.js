"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[7842],{6916:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=r(4848),a=r(8453);const o={sidebar_position:3},i=void 0,l={id:"Runtime Environment/CaT",title:"CaT",description:'The CaT module is available via require "pluto:cat" and provides encoding and decoding for the Colons and Tabs format.',source:"@site/docs/Runtime Environment/CaT.md",sourceDirName:"Runtime Environment",slug:"/Runtime Environment/CaT",permalink:"/docs/Runtime Environment/CaT",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Bigint",permalink:"/docs/Runtime Environment/Bigint"},next:{title:"Crypto",permalink:"/docs/Runtime Environment/Crypto"}},d={},s=[{value:"<code>cat.encode</code>",id:"catencode",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>cat.decode</code>",id:"catdecode",level:3},{value:"Parameters",id:"parameters-1",level:4}];function c(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The CaT module is available via ",(0,t.jsx)(n.code,{children:'require "pluto:cat"'})," and provides encoding and decoding for ",(0,t.jsx)(n.a,{href:"https://docs.soup.do/user/cat",children:"the Colons and Tabs format"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"catencode",children:(0,t.jsx)(n.code,{children:"cat.encode"})}),"\n",(0,t.jsx)(n.p,{children:"Returns a string of CaT."}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," \u2014 The table to encode in CaT."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local cat = require "pluto:cat"\r\n\r\ncat.encode {\r\n    List = {\r\n        __value = "With Value",\r\n        Child = "Also With Value"\r\n    }\r\n} |> io.write\r\n--\x3e List: With Value\r\n--\x3e     Child: Also With Value\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"catdecode",children:(0,t.jsx)(n.code,{children:"cat.decode"})}),"\n",(0,t.jsx)(n.p,{children:"Returns a table representing the CaT data."}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," \u2014 The CaT data to decode."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"presentation"}),' \u2014 How to represent the data as a table. Can be "flat", "flatwithorder", or "full" (default).']}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local cat = require "pluto:cat"\r\n\r\nlocal data = cat.decode [[\r\nList: With Value\r\n    Child: Also With Value\r\n]]\r\n\r\nprint(dumpvar(data))\r\n--\x3e {\r\n--\x3e     [1] = {\r\n--\x3e         ["value"] = string(10) "With Value",\r\n--\x3e         ["name"] = string(4) "List",\r\n--\x3e         ["children"] = {\r\n--\x3e             [1] = {\r\n--\x3e                 ["name"] = string(5) "Child",\r\n--\x3e                 ["value"] = string(15) "Also With Value",\r\n--\x3e             },\r\n--\x3e         },\r\n--\x3e     },\r\n--\x3e }\n'})}),"\n",(0,t.jsxs)(n.p,{children:['With the default "full" representation, the retuned table has an ',(0,t.jsx)(n.code,{children:"__index"})," metamethod for ease of use:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:"print(data.List.value) --\x3e With Value\r\nprint(data.List.Child.value) --\x3e Also With Value\n"})}),"\n",(0,t.jsx)(n.p,{children:"Alternatively, the other representations are available:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local cat = require "pluto:cat"\r\n\r\nprint(dumpvar(cat.decode([[\r\nhome\r\n    john\r\n        hello.txt: Hello, world!\r\n]], "flat")))\r\n--\x3e {\r\n--\x3e     ["home"] = {\r\n--\x3e         ["john"] = {\r\n--\x3e             ["hello.txt"] = string(13) "Hello, world!",\r\n--\x3e         },\r\n--\x3e     },\r\n--\x3e }\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-pluto",children:'local cat = require "pluto:cat"\r\n\r\nprint(dumpvar(cat.decode([[\r\nPrimary Color: Purple\r\nSecondary Color: White\r\n]], "flatwithorder")))\r\n--\x3e {\r\n--\x3e     ["__order"] = {\r\n--\x3e         [1] = string(13) "Primary Color",\r\n--\x3e         [2] = string(15) "Secondary Color",\r\n--\x3e     },\r\n--\x3e     ["Primary Color"] = string(6) "Purple",\r\n--\x3e     ["Secondary Color"] = string(5) "White",\r\n--\x3e }\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(6540);const a={},o=t.createContext(a);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);