"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[7370],{6120:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(4848),o=n(8453);const i={sidebar_position:2},r=void 0,s={id:"New Features/Table Freezing",title:"Table Freezing",description:"Tables can now be frozen at their current state to forbid any future modification. This action is irreversible and permanent for the lifespan of the table.",source:"@site/docs/New Features/Table Freezing.md",sourceDirName:"New Features",slug:"/New Features/Table Freezing",permalink:"/docs/New Features/Table Freezing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Safe Navigation",permalink:"/docs/New Features/Safe Navigation"},next:{title:"Try-Catch Statement",permalink:"/docs/New Features/Try-Catch Statement"}},l={},c=[{value:"What will this prevent?",id:"what-will-this-prevent",level:3}];function u(e){const t={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Tables can now be frozen at their current state to forbid any future modification. This action is irreversible and permanent for the lifespan of the table."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-pluto",metastring:"showLineNumbers",children:"-- Disallowing any edits to the global environment table.\ntable.freeze(_G)\n\n// ERROR:\n_G.string = {}\n// ERROR:\n-- file.pluto:4: attempt to modify frozen table.\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-pluto",metastring:"showLineNumbers",children:'-- Creating a constant local that\'s associated with a frozen table.\nlocal Frozen <const> = table.freeze({ 1, 2, 3 })\n\n// ERROR:\nFrozen = {}\n// ERROR:\n-- file.pluto:4: attempt to reassign constant.\n\n// ERROR:\nFrozen[1] = "new value"\n// ERROR:\n-- file.pluto:7: attempt to modify frozen table.\n\n// ERROR:\nrawset(Frozen, "key", "value")\n// ERROR:\n-- file.pluto:10: attempt to modify frozen table.\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-pluto",metastring:"showLineNumbers",children:'--- Trying to swap the value with the debug library.\nfor i = 1, 249 do\n  local name, value = debug.getlocal(1, i)\n  if name == "Frozen" then\n    // ERROR:\n    debug.setlocal(1, i, { ["key"] = "hello world" })\n    // ERROR:\n    -- file.pluto:5: attempt to modify local variable with a frozen table.\n  end\nend\n'})}),"\n",(0,a.jsx)(t.h3,{id:"what-will-this-prevent",children:"What will this prevent?"}),"\n",(0,a.jsxs)(t.p,{children:["All modifications to the table from within the Lua environment will be prevented, including those from the ",(0,a.jsx)(t.code,{children:"debug"})," library."]}),"\n",(0,a.jsx)(t.admonition,{type:"caution",children:(0,a.jsxs)(t.p,{children:["If you're going to use this for a sandbox, ensure you call ",(0,a.jsx)(t.code,{children:"table.freeze"})," before any users can access the Lua environment, otherwise they can replace that function."]})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(6540);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);