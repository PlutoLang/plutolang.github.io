"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[3836],{9840:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var s=n(4848),a=n(8453);const t={sidebar_position:3},l=void 0,c={id:"Runtime Environment/Library Reference/Crypto",title:"Crypto",description:"Must be included via require.",source:"@site/docs/Runtime Environment/Library Reference/Crypto.md",sourceDirName:"Runtime Environment/Library Reference",slug:"/Runtime Environment/Library Reference/Crypto",permalink:"/docs/Runtime Environment/Library Reference/Crypto",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Assert",permalink:"/docs/Runtime Environment/Library Reference/Assert"},next:{title:"Base32",permalink:"/docs/Runtime Environment/Library Reference/Base32"}},i={},o=[{value:"<code>crypto.lua</code>",id:"cryptolua",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>crypto.md5</code>",id:"cryptomd5",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>crypto.djb2</code>",id:"cryptodjb2",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>crypto.fnv1</code>",id:"cryptofnv1",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>crypto.fnv1a</code>",id:"cryptofnv1a",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>crypto.joaat</code>",id:"cryptojoaat",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"<code>crypto.sdbm</code>",id:"cryptosdbm",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"<code>crypto.crc32</code>",id:"cryptocrc32",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"<code>crypto.lookup3</code>",id:"cryptolookup3",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"<code>crypto.times33</code>",id:"cryptotimes33",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"<code>crypto.sha256</code>",id:"cryptosha256",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"<code>crypto.murmur1</code>",id:"cryptomurmur1",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"<code>crypto.murmur2</code>",id:"cryptomurmur2",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"<code>crypto.murmur2a</code>",id:"cryptomurmur2a",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"<code>crypto.murmur64a</code>",id:"cryptomurmur64a",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"<code>crypto.murmur64b</code>",id:"cryptomurmur64b",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"<code>crypto.murmur2neutral</code>",id:"cryptomurmur2neutral",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"<code>crypto.random</code>",id:"cryptorandom",level:3},{value:"Parameters",id:"parameters-17",level:4}];function h(r){const e={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...r.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["Must be included via ",(0,s.jsx)(e.code,{children:"require"}),"."]}),"\n",(0,s.jsx)(e.h3,{id:"cryptolua",children:(0,s.jsx)(e.code,{children:"crypto.lua"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using Lua's version of the DJB2 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.lua(str) == 2871868277)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptomd5",children:(0,s.jsx)(e.code,{children:"crypto.md5"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the MD5 semi-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.md5(str) == "5eb63bbbe01eeed093cb22bb8f5acdc3")\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptodjb2",children:(0,s.jsx)(e.code,{children:"crypto.djb2"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the DJB2 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.djb2(str) == 894552257)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptofnv1",children:(0,s.jsx)(e.code,{children:"crypto.fnv1"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the FNV1 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.fnv1(str) == 9065573210506989167)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptofnv1a",children:(0,s.jsx)(e.code,{children:"crypto.fnv1a"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the FNV1A non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.fnv1a(str) == 8618312879776256743)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptojoaat",children:(0,s.jsx)(e.code,{children:"crypto.joaat"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the JOAAT non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.joaat(str) == 1045060183)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptosdbm",children:(0,s.jsx)(e.code,{children:"crypto.sdbm"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the SDBM non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.sdbm(str) == 430867652)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptocrc32",children:(0,s.jsx)(e.code,{children:"crypto.crc32"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the CRC32 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n",(0,s.jsx)(e.li,{children:"The initial value for the hash. By default, this is zero."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.crc32(str) == 222957957)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptolookup3",children:(0,s.jsx)(e.code,{children:"crypto.lookup3"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Lookup3 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.lookup3(str) == 1252609637)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptotimes33",children:(0,s.jsx)(e.code,{children:"crypto.times33"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Times33 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.times33(str) == 3889643616)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptosha256",children:(0,s.jsx)(e.code,{children:"crypto.sha256"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the SHA-256 cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n",(0,s.jsx)(e.li,{children:"When set to true, returns raw binary data. false outputs lowercase hex digits. By default, this is false."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello world"\r\nassert(crypto.sha256(str) == "b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9")\r\nassert(crypto.sha256(str, true) == "\\xb9\\x4d\\x27\\xb9\\x93\\x4d\\x3e\\x08\\xa5\\x2e\\x52\\xd7\\xda\\x7d\\xab\\xfa\\xc4\\x84\\xef\\xe3\\x7a\\x53\\x80\\xee\\x90\\x88\\xf7\\xac\\xe2\\xef\\xcd\\xe9")\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur1",children:(0,s.jsx)(e.code,{children:"crypto.murmur1"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur1 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur1(str) == 3154674178)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur2",children:(0,s.jsx)(e.code,{children:"crypto.murmur2"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur2 non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur2(str) == 1151865881)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur2a",children:(0,s.jsx)(e.code,{children:"crypto.murmur2a"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur2A non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur2a(str) == 2650573207)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur64a",children:(0,s.jsx)(e.code,{children:"crypto.murmur64a"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur64A non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur64a(str) == -3190198453633110066)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur64b",children:(0,s.jsx)(e.code,{children:"crypto.murmur64b"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur64A non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur64b(str) == 7088720765356542432)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptomurmur2neutral",children:(0,s.jsx)(e.code,{children:"crypto.murmur2neutral"})}),"\n",(0,s.jsx)(e.p,{children:"Hash a string using the Murmur2Neutral non-cryptographic hashing algorithm."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The string to hash."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nlocal str = "hello"\r\nassert(crypto.murmur2neutral(str) == 1151865881)\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"cryptorandom",children:(0,s.jsx)(e.code,{children:"crypto.random"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"crypto.random"})," function uses your operating system's default PRNG."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["On Linux-based systems, this is ",(0,s.jsx)(e.code,{children:"/dev/urandom"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:["On Windows, this is ",(0,s.jsx)(e.code,{children:"BCryptGenRandom"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"This is a cryptographically-secure PRNG when your system can provide those services. However, if it does not, then this is not cryptographically secure. Either way, it provides good randomness."}),"\n",(0,s.jsx)(e.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"The minimum value to return."}),"\n",(0,s.jsx)(e.li,{children:"The maximum value to return, as a range."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-pluto",metastring:"showLineNumbers",children:'local crypto = require("crypto")\r\nassert(crypto.random(1, 10) < 11)\n'})})]})}function d(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,s.jsx)(e,{...r,children:(0,s.jsx)(h,{...r})}):h(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>l,x:()=>c});var s=n(6540);const a={},t=s.createContext(a);function l(r){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function c(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:l(r.components),s.createElement(t.Provider,{value:e},r.children)}}}]);