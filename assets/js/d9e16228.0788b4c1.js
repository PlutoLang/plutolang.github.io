"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[9984],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=o,f=p["".concat(u,".").concat(d)]||p[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3009:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:6},a=void 0,l={unversionedId:"Runtime Environment/Global Functions",id:"Runtime Environment/Global Functions",title:"Global Functions",description:"Some minor changes & additions to the environment must be disclosed:",source:"@site/docs/Runtime Environment/Global Functions.md",sourceDirName:"Runtime Environment",slug:"/Runtime Environment/Global Functions",permalink:"/docs/Runtime Environment/Global Functions",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"String Functions",permalink:"/docs/Runtime Environment/String Functions"},next:{title:"Crypto Functions",permalink:"/docs/Runtime Environment/Crypto Functions"}},u={},s=[{value:"New Functions",id:"new-functions",level:2},{value:"utostring",id:"utostring",level:3},{value:"utonumber",id:"utonumber",level:3}],c={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Some minor changes & additions to the environment must be disclosed:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"_PVERSION")," is the global to check your current version of Pluto."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"_PSOUP")," is a global boolean you can access to check linkage with Soup."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"package.path")," is modified to also search for ",(0,o.kt)("inlineCode",{parentName:"li"},".pluto")," files.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-pluto"},'if _PVERSION == nil then\n    print("Plain Lua detected (".._VERSION..")")\nelse\n    local soup = ""\n    if not _PSOUP then\n        soup = "not "\n    end\n    print("Pluto detected (".._PVERSION.."), based on ".._VERSION..", "..soup.."compiled with Soup integration")\nend\n')),(0,o.kt)("h2",{id:"new-functions"},"New Functions"),(0,o.kt)("h3",{id:"utostring"},"utostring"),(0,o.kt)("p",null,"Same as ",(0,o.kt)("inlineCode",{parentName:"p"},"tostring"),", but performs the operation under the ",(0,o.kt)("inlineCode",{parentName:"p"},"en_US.UTF-8")," locale. Ensures the same result on all systems."),(0,o.kt)("h3",{id:"utonumber"},"utonumber"),(0,o.kt)("p",null,"Same as ",(0,o.kt)("inlineCode",{parentName:"p"},"tonumber"),", but performs the operation under the ",(0,o.kt)("inlineCode",{parentName:"p"},"en_US.UTF-8")," locale. Ensures the same result on all systems."))}m.isMDXComponent=!0}}]);