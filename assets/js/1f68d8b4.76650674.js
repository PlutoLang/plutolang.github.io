"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[1662],{7345:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"QoL Improvements/Removed Locals Limit","title":"Removed Locals Limit","description":"Pluto removes the locals limit, allowing you to use compile-time constants, including enums, as much as you want.","source":"@site/docs/QoL Improvements/Removed Locals Limit.md","sourceDirName":"QoL Improvements","slug":"/QoL Improvements/Removed Locals Limit","permalink":"/docs/QoL Improvements/Removed Locals Limit","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Optional Parentheses","permalink":"/docs/QoL Improvements/Optional Parentheses"},"next":{"title":"Reserved Identifiers","permalink":"/docs/QoL Improvements/Reserved Identifiers"}}');var s=o(4848),i=o(8453);const r={},a=void 0,c={},l=[];function m(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Pluto removes the locals limit, allowing you to use compile-time constants, including enums, as much as you want."}),"\n",(0,s.jsx)(t.p,{children:"Note that you are still limited to 255 registers, so you can't have infinite dynamic variables per function."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);